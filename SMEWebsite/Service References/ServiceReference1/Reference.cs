//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SMEWebsite.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyDetailsBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class CompanyDetailsBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CrtByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DOEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FactoryAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FactoryCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FactoryPinCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FactoryStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermanentAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermanentCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermanentPinCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermanentStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CrtBy {
            get {
                return this.CrtByField;
            }
            set {
                if ((object.ReferenceEquals(this.CrtByField, value) != true)) {
                    this.CrtByField = value;
                    this.RaisePropertyChanged("CrtBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOE {
            get {
                return this.DOEField;
            }
            set {
                if ((object.ReferenceEquals(this.DOEField, value) != true)) {
                    this.DOEField = value;
                    this.RaisePropertyChanged("DOE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FactoryAddress {
            get {
                return this.FactoryAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.FactoryAddressField, value) != true)) {
                    this.FactoryAddressField = value;
                    this.RaisePropertyChanged("FactoryAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FactoryCity {
            get {
                return this.FactoryCityField;
            }
            set {
                if ((object.ReferenceEquals(this.FactoryCityField, value) != true)) {
                    this.FactoryCityField = value;
                    this.RaisePropertyChanged("FactoryCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FactoryPinCode {
            get {
                return this.FactoryPinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FactoryPinCodeField, value) != true)) {
                    this.FactoryPinCodeField = value;
                    this.RaisePropertyChanged("FactoryPinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FactoryState {
            get {
                return this.FactoryStateField;
            }
            set {
                if ((object.ReferenceEquals(this.FactoryStateField, value) != true)) {
                    this.FactoryStateField = value;
                    this.RaisePropertyChanged("FactoryState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsActiveField, value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pan {
            get {
                return this.PanField;
            }
            set {
                if ((object.ReferenceEquals(this.PanField, value) != true)) {
                    this.PanField = value;
                    this.RaisePropertyChanged("Pan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermanentAddress {
            get {
                return this.PermanentAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.PermanentAddressField, value) != true)) {
                    this.PermanentAddressField = value;
                    this.RaisePropertyChanged("PermanentAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermanentCity {
            get {
                return this.PermanentCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PermanentCityField, value) != true)) {
                    this.PermanentCityField = value;
                    this.RaisePropertyChanged("PermanentCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermanentPinCode {
            get {
                return this.PermanentPinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PermanentPinCodeField, value) != true)) {
                    this.PermanentPinCodeField = value;
                    this.RaisePropertyChanged("PermanentPinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermanentState {
            get {
                return this.PermanentStateField;
            }
            set {
                if ((object.ReferenceEquals(this.PermanentStateField, value) != true)) {
                    this.PermanentStateField = value;
                    this.RaisePropertyChanged("PermanentState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinCode {
            get {
                return this.PinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PinCodeField, value) != true)) {
                    this.PinCodeField = value;
                    this.RaisePropertyChanged("PinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCompanyDetailsBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class GetCompanyDetailsBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessActivitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CrtByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DOEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionAnyotherduesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionDrugLicenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionLIncomeTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionLSalesTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionRegUnderSSIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionRegUnderShopActField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FactoryAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FactoryCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FactoryPinCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FactoryStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FuturePlansField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAnyotherduesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCreditFacilitescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDrugLicenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLIncomeTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLSalesTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRegUnderSSIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRegUnderShopActField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermanentAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PermanentCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermanentPinCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PermanentStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessActivit {
            get {
                return this.BusinessActivitField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessActivitField, value) != true)) {
                    this.BusinessActivitField = value;
                    this.RaisePropertyChanged("BusinessActivit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int City {
            get {
                return this.CityField;
            }
            set {
                if ((this.CityField.Equals(value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CrtBy {
            get {
                return this.CrtByField;
            }
            set {
                if ((this.CrtByField.Equals(value) != true)) {
                    this.CrtByField = value;
                    this.RaisePropertyChanged("CrtBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DOE {
            get {
                return this.DOEField;
            }
            set {
                if ((this.DOEField.Equals(value) != true)) {
                    this.DOEField = value;
                    this.RaisePropertyChanged("DOE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionAnyotherdues {
            get {
                return this.DescriptionAnyotherduesField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionAnyotherduesField, value) != true)) {
                    this.DescriptionAnyotherduesField = value;
                    this.RaisePropertyChanged("DescriptionAnyotherdues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionDrugLicence {
            get {
                return this.DescriptionDrugLicenceField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionDrugLicenceField, value) != true)) {
                    this.DescriptionDrugLicenceField = value;
                    this.RaisePropertyChanged("DescriptionDrugLicence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionLIncomeTax {
            get {
                return this.DescriptionLIncomeTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionLIncomeTaxField, value) != true)) {
                    this.DescriptionLIncomeTaxField = value;
                    this.RaisePropertyChanged("DescriptionLIncomeTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionLSalesTax {
            get {
                return this.DescriptionLSalesTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionLSalesTaxField, value) != true)) {
                    this.DescriptionLSalesTaxField = value;
                    this.RaisePropertyChanged("DescriptionLSalesTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionRegUnderSSI {
            get {
                return this.DescriptionRegUnderSSIField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionRegUnderSSIField, value) != true)) {
                    this.DescriptionRegUnderSSIField = value;
                    this.RaisePropertyChanged("DescriptionRegUnderSSI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionRegUnderShopAct {
            get {
                return this.DescriptionRegUnderShopActField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionRegUnderShopActField, value) != true)) {
                    this.DescriptionRegUnderShopActField = value;
                    this.RaisePropertyChanged("DescriptionRegUnderShopAct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FactoryAddress {
            get {
                return this.FactoryAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.FactoryAddressField, value) != true)) {
                    this.FactoryAddressField = value;
                    this.RaisePropertyChanged("FactoryAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FactoryCity {
            get {
                return this.FactoryCityField;
            }
            set {
                if ((this.FactoryCityField.Equals(value) != true)) {
                    this.FactoryCityField = value;
                    this.RaisePropertyChanged("FactoryCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FactoryPinCode {
            get {
                return this.FactoryPinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FactoryPinCodeField, value) != true)) {
                    this.FactoryPinCodeField = value;
                    this.RaisePropertyChanged("FactoryPinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FactoryState {
            get {
                return this.FactoryStateField;
            }
            set {
                if ((this.FactoryStateField.Equals(value) != true)) {
                    this.FactoryStateField = value;
                    this.RaisePropertyChanged("FactoryState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FuturePlans {
            get {
                return this.FuturePlansField;
            }
            set {
                if ((object.ReferenceEquals(this.FuturePlansField, value) != true)) {
                    this.FuturePlansField = value;
                    this.RaisePropertyChanged("FuturePlans");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAnyotherdues {
            get {
                return this.IsAnyotherduesField;
            }
            set {
                if ((this.IsAnyotherduesField.Equals(value) != true)) {
                    this.IsAnyotherduesField = value;
                    this.RaisePropertyChanged("IsAnyotherdues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCreditFacilitesc {
            get {
                return this.IsCreditFacilitescField;
            }
            set {
                if ((this.IsCreditFacilitescField.Equals(value) != true)) {
                    this.IsCreditFacilitescField = value;
                    this.RaisePropertyChanged("IsCreditFacilitesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDrugLicence {
            get {
                return this.IsDrugLicenceField;
            }
            set {
                if ((this.IsDrugLicenceField.Equals(value) != true)) {
                    this.IsDrugLicenceField = value;
                    this.RaisePropertyChanged("IsDrugLicence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLIncomeTax {
            get {
                return this.IsLIncomeTaxField;
            }
            set {
                if ((this.IsLIncomeTaxField.Equals(value) != true)) {
                    this.IsLIncomeTaxField = value;
                    this.RaisePropertyChanged("IsLIncomeTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLSalesTax {
            get {
                return this.IsLSalesTaxField;
            }
            set {
                if ((this.IsLSalesTaxField.Equals(value) != true)) {
                    this.IsLSalesTaxField = value;
                    this.RaisePropertyChanged("IsLSalesTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRegUnderSSI {
            get {
                return this.IsRegUnderSSIField;
            }
            set {
                if ((this.IsRegUnderSSIField.Equals(value) != true)) {
                    this.IsRegUnderSSIField = value;
                    this.RaisePropertyChanged("IsRegUnderSSI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRegUnderShopAct {
            get {
                return this.IsRegUnderShopActField;
            }
            set {
                if ((this.IsRegUnderShopActField.Equals(value) != true)) {
                    this.IsRegUnderShopActField = value;
                    this.RaisePropertyChanged("IsRegUnderShopAct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pan {
            get {
                return this.PanField;
            }
            set {
                if ((object.ReferenceEquals(this.PanField, value) != true)) {
                    this.PanField = value;
                    this.RaisePropertyChanged("Pan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermanentAddress {
            get {
                return this.PermanentAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.PermanentAddressField, value) != true)) {
                    this.PermanentAddressField = value;
                    this.RaisePropertyChanged("PermanentAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PermanentCity {
            get {
                return this.PermanentCityField;
            }
            set {
                if ((this.PermanentCityField.Equals(value) != true)) {
                    this.PermanentCityField = value;
                    this.RaisePropertyChanged("PermanentCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermanentPinCode {
            get {
                return this.PermanentPinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PermanentPinCodeField, value) != true)) {
                    this.PermanentPinCodeField = value;
                    this.RaisePropertyChanged("PermanentPinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PermanentState {
            get {
                return this.PermanentStateField;
            }
            set {
                if ((this.PermanentStateField.Equals(value) != true)) {
                    this.PermanentStateField = value;
                    this.RaisePropertyChanged("PermanentState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinCode {
            get {
                return this.PinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PinCodeField, value) != true)) {
                    this.PinCodeField = value;
                    this.RaisePropertyChanged("PinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDetailsBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class CustomerDetailsBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdharField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompOwnerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CrtByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentPinCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PANField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermanentAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermanentCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermanentPinCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermanentStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adhar {
            get {
                return this.AdharField;
            }
            set {
                if ((object.ReferenceEquals(this.AdharField, value) != true)) {
                    this.AdharField = value;
                    this.RaisePropertyChanged("Adhar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompOwnerType {
            get {
                return this.CompOwnerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompOwnerTypeField, value) != true)) {
                    this.CompOwnerTypeField = value;
                    this.RaisePropertyChanged("CompOwnerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyIdField, value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CrtBy {
            get {
                return this.CrtByField;
            }
            set {
                if ((object.ReferenceEquals(this.CrtByField, value) != true)) {
                    this.CrtByField = value;
                    this.RaisePropertyChanged("CrtBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentAddress {
            get {
                return this.CurrentAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentAddressField, value) != true)) {
                    this.CurrentAddressField = value;
                    this.RaisePropertyChanged("CurrentAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentCity {
            get {
                return this.CurrentCityField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentCityField, value) != true)) {
                    this.CurrentCityField = value;
                    this.RaisePropertyChanged("CurrentCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentPinCode {
            get {
                return this.CurrentPinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentPinCodeField, value) != true)) {
                    this.CurrentPinCodeField = value;
                    this.RaisePropertyChanged("CurrentPinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentState {
            get {
                return this.CurrentStateField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentStateField, value) != true)) {
                    this.CurrentStateField = value;
                    this.RaisePropertyChanged("CurrentState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((object.ReferenceEquals(this.DOBField, value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FName {
            get {
                return this.FNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FNameField, value) != true)) {
                    this.FNameField = value;
                    this.RaisePropertyChanged("FName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsActiveField, value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LName {
            get {
                return this.LNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LNameField, value) != true)) {
                    this.LNameField = value;
                    this.RaisePropertyChanged("LName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MName {
            get {
                return this.MNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MNameField, value) != true)) {
                    this.MNameField = value;
                    this.RaisePropertyChanged("MName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PAN {
            get {
                return this.PANField;
            }
            set {
                if ((object.ReferenceEquals(this.PANField, value) != true)) {
                    this.PANField = value;
                    this.RaisePropertyChanged("PAN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermanentAddress {
            get {
                return this.PermanentAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.PermanentAddressField, value) != true)) {
                    this.PermanentAddressField = value;
                    this.RaisePropertyChanged("PermanentAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermanentCity {
            get {
                return this.PermanentCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PermanentCityField, value) != true)) {
                    this.PermanentCityField = value;
                    this.RaisePropertyChanged("PermanentCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermanentPinCode {
            get {
                return this.PermanentPinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PermanentPinCodeField, value) != true)) {
                    this.PermanentPinCodeField = value;
                    this.RaisePropertyChanged("PermanentPinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermanentState {
            get {
                return this.PermanentStateField;
            }
            set {
                if ((object.ReferenceEquals(this.PermanentStateField, value) != true)) {
                    this.PermanentStateField = value;
                    this.RaisePropertyChanged("PermanentState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prefix {
            get {
                return this.PrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixField, value) != true)) {
                    this.PrefixField = value;
                    this.RaisePropertyChanged("Prefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Qualification {
            get {
                return this.QualificationField;
            }
            set {
                if ((object.ReferenceEquals(this.QualificationField, value) != true)) {
                    this.QualificationField = value;
                    this.RaisePropertyChanged("Qualification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCustomerDetailsBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class GetCustomerDetailsBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdharField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompOwnerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CrtByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentCityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentPinCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentStateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PANField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermanentAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PermanentCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermanentCityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermanentPinCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PermanentStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermanentStateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adhar {
            get {
                return this.AdharField;
            }
            set {
                if ((object.ReferenceEquals(this.AdharField, value) != true)) {
                    this.AdharField = value;
                    this.RaisePropertyChanged("Adhar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompOwnerType {
            get {
                return this.CompOwnerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompOwnerTypeField, value) != true)) {
                    this.CompOwnerTypeField = value;
                    this.RaisePropertyChanged("CompOwnerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CrtBy {
            get {
                return this.CrtByField;
            }
            set {
                if ((this.CrtByField.Equals(value) != true)) {
                    this.CrtByField = value;
                    this.RaisePropertyChanged("CrtBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentAddress {
            get {
                return this.CurrentAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentAddressField, value) != true)) {
                    this.CurrentAddressField = value;
                    this.RaisePropertyChanged("CurrentAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentCity {
            get {
                return this.CurrentCityField;
            }
            set {
                if ((this.CurrentCityField.Equals(value) != true)) {
                    this.CurrentCityField = value;
                    this.RaisePropertyChanged("CurrentCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentCityName {
            get {
                return this.CurrentCityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentCityNameField, value) != true)) {
                    this.CurrentCityNameField = value;
                    this.RaisePropertyChanged("CurrentCityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentPinCode {
            get {
                return this.CurrentPinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentPinCodeField, value) != true)) {
                    this.CurrentPinCodeField = value;
                    this.RaisePropertyChanged("CurrentPinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentState {
            get {
                return this.CurrentStateField;
            }
            set {
                if ((this.CurrentStateField.Equals(value) != true)) {
                    this.CurrentStateField = value;
                    this.RaisePropertyChanged("CurrentState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentStateName {
            get {
                return this.CurrentStateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentStateNameField, value) != true)) {
                    this.CurrentStateNameField = value;
                    this.RaisePropertyChanged("CurrentStateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((this.DOBField.Equals(value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FName {
            get {
                return this.FNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FNameField, value) != true)) {
                    this.FNameField = value;
                    this.RaisePropertyChanged("FName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LName {
            get {
                return this.LNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LNameField, value) != true)) {
                    this.LNameField = value;
                    this.RaisePropertyChanged("LName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MName {
            get {
                return this.MNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MNameField, value) != true)) {
                    this.MNameField = value;
                    this.RaisePropertyChanged("MName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PAN {
            get {
                return this.PANField;
            }
            set {
                if ((object.ReferenceEquals(this.PANField, value) != true)) {
                    this.PANField = value;
                    this.RaisePropertyChanged("PAN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermanentAddress {
            get {
                return this.PermanentAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.PermanentAddressField, value) != true)) {
                    this.PermanentAddressField = value;
                    this.RaisePropertyChanged("PermanentAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PermanentCity {
            get {
                return this.PermanentCityField;
            }
            set {
                if ((this.PermanentCityField.Equals(value) != true)) {
                    this.PermanentCityField = value;
                    this.RaisePropertyChanged("PermanentCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermanentCityName {
            get {
                return this.PermanentCityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PermanentCityNameField, value) != true)) {
                    this.PermanentCityNameField = value;
                    this.RaisePropertyChanged("PermanentCityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermanentPinCode {
            get {
                return this.PermanentPinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PermanentPinCodeField, value) != true)) {
                    this.PermanentPinCodeField = value;
                    this.RaisePropertyChanged("PermanentPinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PermanentState {
            get {
                return this.PermanentStateField;
            }
            set {
                if ((this.PermanentStateField.Equals(value) != true)) {
                    this.PermanentStateField = value;
                    this.RaisePropertyChanged("PermanentState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermanentStateName {
            get {
                return this.PermanentStateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PermanentStateNameField, value) != true)) {
                    this.PermanentStateNameField = value;
                    this.RaisePropertyChanged("PermanentStateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prefix {
            get {
                return this.PrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixField, value) != true)) {
                    this.PrefixField = value;
                    this.RaisePropertyChanged("Prefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Qualification {
            get {
                return this.QualificationField;
            }
            set {
                if ((object.ReferenceEquals(this.QualificationField, value) != true)) {
                    this.QualificationField = value;
                    this.RaisePropertyChanged("Qualification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MachineDetailsBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class MachineDetailsBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CrtByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsLoanRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsSelfContributionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurposeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalMachineCostField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyIdField, value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CrtBy {
            get {
                return this.CrtByField;
            }
            set {
                if ((object.ReferenceEquals(this.CrtByField, value) != true)) {
                    this.CrtByField = value;
                    this.RaisePropertyChanged("CrtBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DI {
            get {
                return this.DIField;
            }
            set {
                if ((object.ReferenceEquals(this.DIField, value) != true)) {
                    this.DIField = value;
                    this.RaisePropertyChanged("DI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsActiveField, value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsLoanRequired {
            get {
                return this.IsLoanRequiredField;
            }
            set {
                if ((object.ReferenceEquals(this.IsLoanRequiredField, value) != true)) {
                    this.IsLoanRequiredField = value;
                    this.RaisePropertyChanged("IsLoanRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsSelfContribution {
            get {
                return this.IsSelfContributionField;
            }
            set {
                if ((object.ReferenceEquals(this.IsSelfContributionField, value) != true)) {
                    this.IsSelfContributionField = value;
                    this.RaisePropertyChanged("IsSelfContribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineType {
            get {
                return this.MachineTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineTypeField, value) != true)) {
                    this.MachineTypeField = value;
                    this.RaisePropertyChanged("MachineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purpose {
            get {
                return this.PurposeField;
            }
            set {
                if ((object.ReferenceEquals(this.PurposeField, value) != true)) {
                    this.PurposeField = value;
                    this.RaisePropertyChanged("Purpose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalMachineCost {
            get {
                return this.TotalMachineCostField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalMachineCostField, value) != true)) {
                    this.TotalMachineCostField = value;
                    this.RaisePropertyChanged("TotalMachineCost");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMachineDetailsBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class GetMachineDetailsBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CrtByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLoanRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSelfContributionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurposeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalMachineCostField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CrtBy {
            get {
                return this.CrtByField;
            }
            set {
                if ((this.CrtByField.Equals(value) != true)) {
                    this.CrtByField = value;
                    this.RaisePropertyChanged("CrtBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DI {
            get {
                return this.DIField;
            }
            set {
                if ((this.DIField.Equals(value) != true)) {
                    this.DIField = value;
                    this.RaisePropertyChanged("DI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLoanRequired {
            get {
                return this.IsLoanRequiredField;
            }
            set {
                if ((this.IsLoanRequiredField.Equals(value) != true)) {
                    this.IsLoanRequiredField = value;
                    this.RaisePropertyChanged("IsLoanRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSelfContribution {
            get {
                return this.IsSelfContributionField;
            }
            set {
                if ((this.IsSelfContributionField.Equals(value) != true)) {
                    this.IsSelfContributionField = value;
                    this.RaisePropertyChanged("IsSelfContribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineType {
            get {
                return this.MachineTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineTypeField, value) != true)) {
                    this.MachineTypeField = value;
                    this.RaisePropertyChanged("MachineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purpose {
            get {
                return this.PurposeField;
            }
            set {
                if ((object.ReferenceEquals(this.PurposeField, value) != true)) {
                    this.PurposeField = value;
                    this.RaisePropertyChanged("Purpose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalMachineCost {
            get {
                return this.TotalMachineCostField;
            }
            set {
                if ((this.TotalMachineCostField.Equals(value) != true)) {
                    this.TotalMachineCostField = value;
                    this.RaisePropertyChanged("TotalMachineCost");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BankDetailsBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class BankDetailsBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BankIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CrtByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CtdDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BankId {
            get {
                return this.BankIdField;
            }
            set {
                if ((this.BankIdField.Equals(value) != true)) {
                    this.BankIdField = value;
                    this.RaisePropertyChanged("BankId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CrtBy {
            get {
                return this.CrtByField;
            }
            set {
                if ((this.CrtByField.Equals(value) != true)) {
                    this.CrtByField = value;
                    this.RaisePropertyChanged("CrtBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CtdDate {
            get {
                return this.CtdDateField;
            }
            set {
                if ((this.CtdDateField.Equals(value) != true)) {
                    this.CtdDateField = value;
                    this.RaisePropertyChanged("CtdDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FacilitiesTypesBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class FacilitiesTypesBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CollaterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CrtByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentBankerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsExistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutstandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ROIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenureODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Collater {
            get {
                return this.CollaterField;
            }
            set {
                if ((object.ReferenceEquals(this.CollaterField, value) != true)) {
                    this.CollaterField = value;
                    this.RaisePropertyChanged("Collater");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyIdField, value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CrtBy {
            get {
                return this.CrtByField;
            }
            set {
                if ((object.ReferenceEquals(this.CrtByField, value) != true)) {
                    this.CrtByField = value;
                    this.RaisePropertyChanged("CrtBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentBanker {
            get {
                return this.CurrentBankerField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentBankerField, value) != true)) {
                    this.CurrentBankerField = value;
                    this.RaisePropertyChanged("CurrentBanker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsActiveField, value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsExist {
            get {
                return this.IsExistField;
            }
            set {
                if ((object.ReferenceEquals(this.IsExistField, value) != true)) {
                    this.IsExistField = value;
                    this.RaisePropertyChanged("IsExist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Limit {
            get {
                return this.LimitField;
            }
            set {
                if ((object.ReferenceEquals(this.LimitField, value) != true)) {
                    this.LimitField = value;
                    this.RaisePropertyChanged("Limit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Outstand {
            get {
                return this.OutstandField;
            }
            set {
                if ((object.ReferenceEquals(this.OutstandField, value) != true)) {
                    this.OutstandField = value;
                    this.RaisePropertyChanged("Outstand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ROI {
            get {
                return this.ROIField;
            }
            set {
                if ((object.ReferenceEquals(this.ROIField, value) != true)) {
                    this.ROIField = value;
                    this.RaisePropertyChanged("ROI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenureOD {
            get {
                return this.TenureODField;
            }
            set {
                if ((object.ReferenceEquals(this.TenureODField, value) != true)) {
                    this.TenureODField = value;
                    this.RaisePropertyChanged("TenureOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeId {
            get {
                return this.TypeIdField;
            }
            set {
                if ((this.TypeIdField.Equals(value) != true)) {
                    this.TypeIdField = value;
                    this.RaisePropertyChanged("TypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetFacilitiesTypesBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class GetFacilitiesTypesBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CollaterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CrtByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CtdDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentBankerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OutstandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ROIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenureODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Collater {
            get {
                return this.CollaterField;
            }
            set {
                if ((this.CollaterField.Equals(value) != true)) {
                    this.CollaterField = value;
                    this.RaisePropertyChanged("Collater");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CrtBy {
            get {
                return this.CrtByField;
            }
            set {
                if ((this.CrtByField.Equals(value) != true)) {
                    this.CrtByField = value;
                    this.RaisePropertyChanged("CrtBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CtdDate {
            get {
                return this.CtdDateField;
            }
            set {
                if ((this.CtdDateField.Equals(value) != true)) {
                    this.CtdDateField = value;
                    this.RaisePropertyChanged("CtdDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentBanker {
            get {
                return this.CurrentBankerField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentBankerField, value) != true)) {
                    this.CurrentBankerField = value;
                    this.RaisePropertyChanged("CurrentBanker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExist {
            get {
                return this.IsExistField;
            }
            set {
                if ((this.IsExistField.Equals(value) != true)) {
                    this.IsExistField = value;
                    this.RaisePropertyChanged("IsExist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Limit {
            get {
                return this.LimitField;
            }
            set {
                if ((this.LimitField.Equals(value) != true)) {
                    this.LimitField = value;
                    this.RaisePropertyChanged("Limit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Outstand {
            get {
                return this.OutstandField;
            }
            set {
                if ((this.OutstandField.Equals(value) != true)) {
                    this.OutstandField = value;
                    this.RaisePropertyChanged("Outstand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ROI {
            get {
                return this.ROIField;
            }
            set {
                if ((object.ReferenceEquals(this.ROIField, value) != true)) {
                    this.ROIField = value;
                    this.RaisePropertyChanged("ROI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenureOD {
            get {
                return this.TenureODField;
            }
            set {
                if ((object.ReferenceEquals(this.TenureODField, value) != true)) {
                    this.TenureODField = value;
                    this.RaisePropertyChanged("TenureOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeId {
            get {
                return this.TypeIdField;
            }
            set {
                if ((this.TypeIdField.Equals(value) != true)) {
                    this.TypeIdField = value;
                    this.RaisePropertyChanged("TypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssociateBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class AssociateBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssociateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CollaterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentBankerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutstandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ROIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenureODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssociateName {
            get {
                return this.AssociateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociateNameField, value) != true)) {
                    this.AssociateNameField = value;
                    this.RaisePropertyChanged("AssociateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Collater {
            get {
                return this.CollaterField;
            }
            set {
                if ((object.ReferenceEquals(this.CollaterField, value) != true)) {
                    this.CollaterField = value;
                    this.RaisePropertyChanged("Collater");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyIdField, value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentBanker {
            get {
                return this.CurrentBankerField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentBankerField, value) != true)) {
                    this.CurrentBankerField = value;
                    this.RaisePropertyChanged("CurrentBanker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsActiveField, value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Limit {
            get {
                return this.LimitField;
            }
            set {
                if ((object.ReferenceEquals(this.LimitField, value) != true)) {
                    this.LimitField = value;
                    this.RaisePropertyChanged("Limit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Outstand {
            get {
                return this.OutstandField;
            }
            set {
                if ((object.ReferenceEquals(this.OutstandField, value) != true)) {
                    this.OutstandField = value;
                    this.RaisePropertyChanged("Outstand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ROI {
            get {
                return this.ROIField;
            }
            set {
                if ((object.ReferenceEquals(this.ROIField, value) != true)) {
                    this.ROIField = value;
                    this.RaisePropertyChanged("ROI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenureOD {
            get {
                return this.TenureODField;
            }
            set {
                if ((object.ReferenceEquals(this.TenureODField, value) != true)) {
                    this.TenureODField = value;
                    this.RaisePropertyChanged("TenureOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAssociateBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class GetAssociateBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssociateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CollaterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CrtByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CtdDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentBankerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OutstandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ROIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenureODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssociateName {
            get {
                return this.AssociateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociateNameField, value) != true)) {
                    this.AssociateNameField = value;
                    this.RaisePropertyChanged("AssociateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Collater {
            get {
                return this.CollaterField;
            }
            set {
                if ((this.CollaterField.Equals(value) != true)) {
                    this.CollaterField = value;
                    this.RaisePropertyChanged("Collater");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CrtBy {
            get {
                return this.CrtByField;
            }
            set {
                if ((this.CrtByField.Equals(value) != true)) {
                    this.CrtByField = value;
                    this.RaisePropertyChanged("CrtBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CtdDate {
            get {
                return this.CtdDateField;
            }
            set {
                if ((this.CtdDateField.Equals(value) != true)) {
                    this.CtdDateField = value;
                    this.RaisePropertyChanged("CtdDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentBanker {
            get {
                return this.CurrentBankerField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentBankerField, value) != true)) {
                    this.CurrentBankerField = value;
                    this.RaisePropertyChanged("CurrentBanker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExist {
            get {
                return this.IsExistField;
            }
            set {
                if ((this.IsExistField.Equals(value) != true)) {
                    this.IsExistField = value;
                    this.RaisePropertyChanged("IsExist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Limit {
            get {
                return this.LimitField;
            }
            set {
                if ((this.LimitField.Equals(value) != true)) {
                    this.LimitField = value;
                    this.RaisePropertyChanged("Limit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Outstand {
            get {
                return this.OutstandField;
            }
            set {
                if ((this.OutstandField.Equals(value) != true)) {
                    this.OutstandField = value;
                    this.RaisePropertyChanged("Outstand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ROI {
            get {
                return this.ROIField;
            }
            set {
                if ((object.ReferenceEquals(this.ROIField, value) != true)) {
                    this.ROIField = value;
                    this.RaisePropertyChanged("ROI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenureOD {
            get {
                return this.TenureODField;
            }
            set {
                if ((object.ReferenceEquals(this.TenureODField, value) != true)) {
                    this.TenureODField = value;
                    this.RaisePropertyChanged("TenureOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CollateralsSummaryBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class CollateralsSummaryBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CrtByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyAgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummaryBusinessActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummaryFuturePlanesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyIdField, value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CrtBy {
            get {
                return this.CrtByField;
            }
            set {
                if ((object.ReferenceEquals(this.CrtByField, value) != true)) {
                    this.CrtByField = value;
                    this.RaisePropertyChanged("CrtBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsActiveField, value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyAge {
            get {
                return this.PropertyAgeField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyAgeField, value) != true)) {
                    this.PropertyAgeField = value;
                    this.RaisePropertyChanged("PropertyAge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SummaryBusinessActivity {
            get {
                return this.SummaryBusinessActivityField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryBusinessActivityField, value) != true)) {
                    this.SummaryBusinessActivityField = value;
                    this.RaisePropertyChanged("SummaryBusinessActivity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SummaryFuturePlanes {
            get {
                return this.SummaryFuturePlanesField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryFuturePlanesField, value) != true)) {
                    this.SummaryFuturePlanesField = value;
                    this.RaisePropertyChanged("SummaryFuturePlanes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCollateralsSummaryBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class GetCollateralsSummaryBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CrtByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PropertyAgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummaryBusinessActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummaryFuturePlanesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int City {
            get {
                return this.CityField;
            }
            set {
                if ((this.CityField.Equals(value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CrtBy {
            get {
                return this.CrtByField;
            }
            set {
                if ((this.CrtByField.Equals(value) != true)) {
                    this.CrtByField = value;
                    this.RaisePropertyChanged("CrtBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PropertyAge {
            get {
                return this.PropertyAgeField;
            }
            set {
                if ((this.PropertyAgeField.Equals(value) != true)) {
                    this.PropertyAgeField = value;
                    this.RaisePropertyChanged("PropertyAge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SummaryBusinessActivity {
            get {
                return this.SummaryBusinessActivityField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryBusinessActivityField, value) != true)) {
                    this.SummaryBusinessActivityField = value;
                    this.RaisePropertyChanged("SummaryBusinessActivity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SummaryFuturePlanes {
            get {
                return this.SummaryFuturePlanesField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryFuturePlanesField, value) != true)) {
                    this.SummaryFuturePlanesField = value;
                    this.RaisePropertyChanged("SummaryFuturePlanes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PerformanceEstimateBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class PerformanceEstimateBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CrtByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThirdYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyIdField, value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CrtBy {
            get {
                return this.CrtByField;
            }
            set {
                if ((object.ReferenceEquals(this.CrtByField, value) != true)) {
                    this.CrtByField = value;
                    this.RaisePropertyChanged("CrtBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentYear {
            get {
                return this.CurrentYearField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentYearField, value) != true)) {
                    this.CurrentYearField = value;
                    this.RaisePropertyChanged("CurrentYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstYear {
            get {
                return this.FirstYearField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstYearField, value) != true)) {
                    this.FirstYearField = value;
                    this.RaisePropertyChanged("FirstYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondYear {
            get {
                return this.SecondYearField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondYearField, value) != true)) {
                    this.SecondYearField = value;
                    this.RaisePropertyChanged("SecondYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThirdYear {
            get {
                return this.ThirdYearField;
            }
            set {
                if ((object.ReferenceEquals(this.ThirdYearField, value) != true)) {
                    this.ThirdYearField = value;
                    this.RaisePropertyChanged("ThirdYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPerformanceEstimatesBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class GetPerformanceEstimatesBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CrtByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrentYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FirstYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SecondYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ThirdYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CrtBy {
            get {
                return this.CrtByField;
            }
            set {
                if ((this.CrtByField.Equals(value) != true)) {
                    this.CrtByField = value;
                    this.RaisePropertyChanged("CrtBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CurrentYear {
            get {
                return this.CurrentYearField;
            }
            set {
                if ((this.CurrentYearField.Equals(value) != true)) {
                    this.CurrentYearField = value;
                    this.RaisePropertyChanged("CurrentYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FirstYear {
            get {
                return this.FirstYearField;
            }
            set {
                if ((this.FirstYearField.Equals(value) != true)) {
                    this.FirstYearField = value;
                    this.RaisePropertyChanged("FirstYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SecondYear {
            get {
                return this.SecondYearField;
            }
            set {
                if ((this.SecondYearField.Equals(value) != true)) {
                    this.SecondYearField = value;
                    this.RaisePropertyChanged("SecondYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ThirdYear {
            get {
                return this.ThirdYearField;
            }
            set {
                if ((this.ThirdYearField.Equals(value) != true)) {
                    this.ThirdYearField = value;
                    this.RaisePropertyChanged("ThirdYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentDetailsBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class DocumentDetailsBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChildDocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChildDocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CrtByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentDocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentDocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChildDocumentId {
            get {
                return this.ChildDocumentIdField;
            }
            set {
                if ((this.ChildDocumentIdField.Equals(value) != true)) {
                    this.ChildDocumentIdField = value;
                    this.RaisePropertyChanged("ChildDocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChildDocumentName {
            get {
                return this.ChildDocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildDocumentNameField, value) != true)) {
                    this.ChildDocumentNameField = value;
                    this.RaisePropertyChanged("ChildDocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CrtBy {
            get {
                return this.CrtByField;
            }
            set {
                if ((this.CrtByField.Equals(value) != true)) {
                    this.CrtByField = value;
                    this.RaisePropertyChanged("CrtBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentDocumentId {
            get {
                return this.ParentDocumentIdField;
            }
            set {
                if ((this.ParentDocumentIdField.Equals(value) != true)) {
                    this.ParentDocumentIdField = value;
                    this.RaisePropertyChanged("ParentDocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentDocumentName {
            get {
                return this.ParentDocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentDocumentNameField, value) != true)) {
                    this.ParentDocumentNameField = value;
                    this.RaisePropertyChanged("ParentDocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScoreBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class ScoreBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CrtByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RatingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyName {
            get {
                return this.AgencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyNameField, value) != true)) {
                    this.AgencyNameField = value;
                    this.RaisePropertyChanged("AgencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyIdField, value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CrtBy {
            get {
                return this.CrtByField;
            }
            set {
                if ((object.ReferenceEquals(this.CrtByField, value) != true)) {
                    this.CrtByField = value;
                    this.RaisePropertyChanged("CrtBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsActiveField, value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((object.ReferenceEquals(this.RatingField, value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetScoreBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class GetScoreBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CrtByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RatingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyName {
            get {
                return this.AgencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyNameField, value) != true)) {
                    this.AgencyNameField = value;
                    this.RaisePropertyChanged("AgencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CrtBy {
            get {
                return this.CrtByField;
            }
            set {
                if ((this.CrtByField.Equals(value) != true)) {
                    this.CrtByField = value;
                    this.RaisePropertyChanged("CrtBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((object.ReferenceEquals(this.RatingField, value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CityDetailsBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class CityDetailsBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StateDetailsBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class StateDetailsBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class LoginBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommonBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class CommonBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchCompanyBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class SearchCompanyBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompayName {
            get {
                return this.CompayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompayNameField, value) != true)) {
                    this.CompayNameField = value;
                    this.RaisePropertyChanged("CompayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchKey {
            get {
                return this.SearchKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchKeyField, value) != true)) {
                    this.SearchKeyField = value;
                    this.RaisePropertyChanged("SearchKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRegistrationBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class UserRegistrationBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CrtByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CrtBy {
            get {
                return this.CrtByField;
            }
            set {
                if ((object.ReferenceEquals(this.CrtByField, value) != true)) {
                    this.CrtByField = value;
                    this.RaisePropertyChanged("CrtBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMail {
            get {
                return this.EMailField;
            }
            set {
                if ((object.ReferenceEquals(this.EMailField, value) != true)) {
                    this.EMailField = value;
                    this.RaisePropertyChanged("EMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpCode {
            get {
                return this.EmpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpCodeField, value) != true)) {
                    this.EmpCodeField = value;
                    this.RaisePropertyChanged("EmpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsActiveField, value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pass {
            get {
                return this.PassField;
            }
            set {
                if ((object.ReferenceEquals(this.PassField, value) != true)) {
                    this.PassField = value;
                    this.RaisePropertyChanged("Pass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserRegistrationBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class GetUserRegistrationBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CrtByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int groupidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CrtBy {
            get {
                return this.CrtByField;
            }
            set {
                if ((this.CrtByField.Equals(value) != true)) {
                    this.CrtByField = value;
                    this.RaisePropertyChanged("CrtBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpCode {
            get {
                return this.EmpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpCodeField, value) != true)) {
                    this.EmpCodeField = value;
                    this.RaisePropertyChanged("EmpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsActiveField, value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pass {
            get {
                return this.PassField;
            }
            set {
                if ((object.ReferenceEquals(this.PassField, value) != true)) {
                    this.PassField = value;
                    this.RaisePropertyChanged("Pass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int groupid {
            get {
                return this.groupidField;
            }
            set {
                if ((this.groupidField.Equals(value) != true)) {
                    this.groupidField = value;
                    this.RaisePropertyChanged("groupid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatutoryBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class StatutoryBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CrtByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionAnyotherduesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionDrugLicenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionLIncomeTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionLSalesTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionRegUnderSSIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionRegUnderShopActField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsAnyotherduesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsCreditFacilitescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsDrugLicenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsLIncomeTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsLSalesTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsRegUnderSSIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsRegUnderShopActField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CrtBy {
            get {
                return this.CrtByField;
            }
            set {
                if ((object.ReferenceEquals(this.CrtByField, value) != true)) {
                    this.CrtByField = value;
                    this.RaisePropertyChanged("CrtBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionAnyotherdues {
            get {
                return this.DescriptionAnyotherduesField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionAnyotherduesField, value) != true)) {
                    this.DescriptionAnyotherduesField = value;
                    this.RaisePropertyChanged("DescriptionAnyotherdues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionDrugLicence {
            get {
                return this.DescriptionDrugLicenceField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionDrugLicenceField, value) != true)) {
                    this.DescriptionDrugLicenceField = value;
                    this.RaisePropertyChanged("DescriptionDrugLicence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionLIncomeTax {
            get {
                return this.DescriptionLIncomeTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionLIncomeTaxField, value) != true)) {
                    this.DescriptionLIncomeTaxField = value;
                    this.RaisePropertyChanged("DescriptionLIncomeTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionLSalesTax {
            get {
                return this.DescriptionLSalesTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionLSalesTaxField, value) != true)) {
                    this.DescriptionLSalesTaxField = value;
                    this.RaisePropertyChanged("DescriptionLSalesTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionRegUnderSSI {
            get {
                return this.DescriptionRegUnderSSIField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionRegUnderSSIField, value) != true)) {
                    this.DescriptionRegUnderSSIField = value;
                    this.RaisePropertyChanged("DescriptionRegUnderSSI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionRegUnderShopAct {
            get {
                return this.DescriptionRegUnderShopActField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionRegUnderShopActField, value) != true)) {
                    this.DescriptionRegUnderShopActField = value;
                    this.RaisePropertyChanged("DescriptionRegUnderShopAct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsActiveField, value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsAnyotherdues {
            get {
                return this.IsAnyotherduesField;
            }
            set {
                if ((object.ReferenceEquals(this.IsAnyotherduesField, value) != true)) {
                    this.IsAnyotherduesField = value;
                    this.RaisePropertyChanged("IsAnyotherdues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsCreditFacilitesc {
            get {
                return this.IsCreditFacilitescField;
            }
            set {
                if ((object.ReferenceEquals(this.IsCreditFacilitescField, value) != true)) {
                    this.IsCreditFacilitescField = value;
                    this.RaisePropertyChanged("IsCreditFacilitesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsDrugLicence {
            get {
                return this.IsDrugLicenceField;
            }
            set {
                if ((object.ReferenceEquals(this.IsDrugLicenceField, value) != true)) {
                    this.IsDrugLicenceField = value;
                    this.RaisePropertyChanged("IsDrugLicence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsLIncomeTax {
            get {
                return this.IsLIncomeTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.IsLIncomeTaxField, value) != true)) {
                    this.IsLIncomeTaxField = value;
                    this.RaisePropertyChanged("IsLIncomeTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsLSalesTax {
            get {
                return this.IsLSalesTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.IsLSalesTaxField, value) != true)) {
                    this.IsLSalesTaxField = value;
                    this.RaisePropertyChanged("IsLSalesTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsRegUnderSSI {
            get {
                return this.IsRegUnderSSIField;
            }
            set {
                if ((object.ReferenceEquals(this.IsRegUnderSSIField, value) != true)) {
                    this.IsRegUnderSSIField = value;
                    this.RaisePropertyChanged("IsRegUnderSSI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsRegUnderShopAct {
            get {
                return this.IsRegUnderShopActField;
            }
            set {
                if ((object.ReferenceEquals(this.IsRegUnderShopActField, value) != true)) {
                    this.IsRegUnderShopActField = value;
                    this.RaisePropertyChanged("IsRegUnderShopAct");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetStatutoryBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class GetStatutoryBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessActivitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionAnyotherduesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionDrugLicenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionLIncomeTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionLSalesTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionRegUnderSSIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionRegUnderShopActField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FuturePlansField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAnyotherduesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCreditFacilitescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDrugLicenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLIncomeTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLSalesTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRegUnderSSIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRegUnderShopActField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessActivit {
            get {
                return this.BusinessActivitField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessActivitField, value) != true)) {
                    this.BusinessActivitField = value;
                    this.RaisePropertyChanged("BusinessActivit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Companyid {
            get {
                return this.CompanyidField;
            }
            set {
                if ((this.CompanyidField.Equals(value) != true)) {
                    this.CompanyidField = value;
                    this.RaisePropertyChanged("Companyid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionAnyotherdues {
            get {
                return this.DescriptionAnyotherduesField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionAnyotherduesField, value) != true)) {
                    this.DescriptionAnyotherduesField = value;
                    this.RaisePropertyChanged("DescriptionAnyotherdues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionDrugLicence {
            get {
                return this.DescriptionDrugLicenceField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionDrugLicenceField, value) != true)) {
                    this.DescriptionDrugLicenceField = value;
                    this.RaisePropertyChanged("DescriptionDrugLicence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionLIncomeTax {
            get {
                return this.DescriptionLIncomeTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionLIncomeTaxField, value) != true)) {
                    this.DescriptionLIncomeTaxField = value;
                    this.RaisePropertyChanged("DescriptionLIncomeTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionLSalesTax {
            get {
                return this.DescriptionLSalesTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionLSalesTaxField, value) != true)) {
                    this.DescriptionLSalesTaxField = value;
                    this.RaisePropertyChanged("DescriptionLSalesTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionRegUnderSSI {
            get {
                return this.DescriptionRegUnderSSIField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionRegUnderSSIField, value) != true)) {
                    this.DescriptionRegUnderSSIField = value;
                    this.RaisePropertyChanged("DescriptionRegUnderSSI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionRegUnderShopAct {
            get {
                return this.DescriptionRegUnderShopActField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionRegUnderShopActField, value) != true)) {
                    this.DescriptionRegUnderShopActField = value;
                    this.RaisePropertyChanged("DescriptionRegUnderShopAct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FuturePlans {
            get {
                return this.FuturePlansField;
            }
            set {
                if ((object.ReferenceEquals(this.FuturePlansField, value) != true)) {
                    this.FuturePlansField = value;
                    this.RaisePropertyChanged("FuturePlans");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAnyotherdues {
            get {
                return this.IsAnyotherduesField;
            }
            set {
                if ((this.IsAnyotherduesField.Equals(value) != true)) {
                    this.IsAnyotherduesField = value;
                    this.RaisePropertyChanged("IsAnyotherdues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCreditFacilitesc {
            get {
                return this.IsCreditFacilitescField;
            }
            set {
                if ((this.IsCreditFacilitescField.Equals(value) != true)) {
                    this.IsCreditFacilitescField = value;
                    this.RaisePropertyChanged("IsCreditFacilitesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDrugLicence {
            get {
                return this.IsDrugLicenceField;
            }
            set {
                if ((this.IsDrugLicenceField.Equals(value) != true)) {
                    this.IsDrugLicenceField = value;
                    this.RaisePropertyChanged("IsDrugLicence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLIncomeTax {
            get {
                return this.IsLIncomeTaxField;
            }
            set {
                if ((this.IsLIncomeTaxField.Equals(value) != true)) {
                    this.IsLIncomeTaxField = value;
                    this.RaisePropertyChanged("IsLIncomeTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLSalesTax {
            get {
                return this.IsLSalesTaxField;
            }
            set {
                if ((this.IsLSalesTaxField.Equals(value) != true)) {
                    this.IsLSalesTaxField = value;
                    this.RaisePropertyChanged("IsLSalesTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRegUnderSSI {
            get {
                return this.IsRegUnderSSIField;
            }
            set {
                if ((this.IsRegUnderSSIField.Equals(value) != true)) {
                    this.IsRegUnderSSIField = value;
                    this.RaisePropertyChanged("IsRegUnderSSI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRegUnderShopAct {
            get {
                return this.IsRegUnderShopActField;
            }
            set {
                if ((this.IsRegUnderShopActField.Equals(value) != true)) {
                    this.IsRegUnderShopActField = value;
                    this.RaisePropertyChanged("IsRegUnderShopAct");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MenuMappingBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class MenuMappingBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string actionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int createbyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string createdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isReadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isWriteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string isviewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int menuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int modifiedbyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string modifieddateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int roleidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int useridField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string action {
            get {
                return this.actionField;
            }
            set {
                if ((object.ReferenceEquals(this.actionField, value) != true)) {
                    this.actionField = value;
                    this.RaisePropertyChanged("action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int createby {
            get {
                return this.createbyField;
            }
            set {
                if ((this.createbyField.Equals(value) != true)) {
                    this.createbyField = value;
                    this.RaisePropertyChanged("createby");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string createdate {
            get {
                return this.createdateField;
            }
            set {
                if ((object.ReferenceEquals(this.createdateField, value) != true)) {
                    this.createdateField = value;
                    this.RaisePropertyChanged("createdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isDelete {
            get {
                return this.isDeleteField;
            }
            set {
                if ((this.isDeleteField.Equals(value) != true)) {
                    this.isDeleteField = value;
                    this.RaisePropertyChanged("isDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isRead {
            get {
                return this.isReadField;
            }
            set {
                if ((this.isReadField.Equals(value) != true)) {
                    this.isReadField = value;
                    this.RaisePropertyChanged("isRead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isWrite {
            get {
                return this.isWriteField;
            }
            set {
                if ((this.isWriteField.Equals(value) != true)) {
                    this.isWriteField = value;
                    this.RaisePropertyChanged("isWrite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string isview {
            get {
                return this.isviewField;
            }
            set {
                if ((object.ReferenceEquals(this.isviewField, value) != true)) {
                    this.isviewField = value;
                    this.RaisePropertyChanged("isview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int menuid {
            get {
                return this.menuidField;
            }
            set {
                if ((this.menuidField.Equals(value) != true)) {
                    this.menuidField = value;
                    this.RaisePropertyChanged("menuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int modifiedby {
            get {
                return this.modifiedbyField;
            }
            set {
                if ((this.modifiedbyField.Equals(value) != true)) {
                    this.modifiedbyField = value;
                    this.RaisePropertyChanged("modifiedby");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string modifieddate {
            get {
                return this.modifieddateField;
            }
            set {
                if ((object.ReferenceEquals(this.modifieddateField, value) != true)) {
                    this.modifieddateField = value;
                    this.RaisePropertyChanged("modifieddate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int roleid {
            get {
                return this.roleidField;
            }
            set {
                if ((this.roleidField.Equals(value) != true)) {
                    this.roleidField = value;
                    this.RaisePropertyChanged("roleid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userid {
            get {
                return this.useridField;
            }
            set {
                if ((this.useridField.Equals(value) != true)) {
                    this.useridField = value;
                    this.RaisePropertyChanged("userid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MenuMasterBo", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class MenuMasterBo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Crt_ByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Crt_DtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWriteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsdeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Menu_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Modified_ByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Modified_DtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int useridField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Crt_By {
            get {
                return this.Crt_ByField;
            }
            set {
                if ((this.Crt_ByField.Equals(value) != true)) {
                    this.Crt_ByField = value;
                    this.RaisePropertyChanged("Crt_By");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Crt_Dt {
            get {
                return this.Crt_DtField;
            }
            set {
                if ((object.ReferenceEquals(this.Crt_DtField, value) != true)) {
                    this.Crt_DtField = value;
                    this.RaisePropertyChanged("Crt_Dt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRead {
            get {
                return this.IsReadField;
            }
            set {
                if ((this.IsReadField.Equals(value) != true)) {
                    this.IsReadField = value;
                    this.RaisePropertyChanged("IsRead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWrite {
            get {
                return this.IsWriteField;
            }
            set {
                if ((this.IsWriteField.Equals(value) != true)) {
                    this.IsWriteField = value;
                    this.RaisePropertyChanged("IsWrite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Isdelete {
            get {
                return this.IsdeleteField;
            }
            set {
                if ((this.IsdeleteField.Equals(value) != true)) {
                    this.IsdeleteField = value;
                    this.RaisePropertyChanged("Isdelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Menu_Name {
            get {
                return this.Menu_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Menu_NameField, value) != true)) {
                    this.Menu_NameField = value;
                    this.RaisePropertyChanged("Menu_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Modified_By {
            get {
                return this.Modified_ByField;
            }
            set {
                if ((this.Modified_ByField.Equals(value) != true)) {
                    this.Modified_ByField = value;
                    this.RaisePropertyChanged("Modified_By");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modified_Dt {
            get {
                return this.Modified_DtField;
            }
            set {
                if ((object.ReferenceEquals(this.Modified_DtField, value) != true)) {
                    this.Modified_DtField = value;
                    this.RaisePropertyChanged("Modified_Dt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentName {
            get {
                return this.ParentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentNameField, value) != true)) {
                    this.ParentNameField = value;
                    this.RaisePropertyChanged("ParentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userid {
            get {
                return this.useridField;
            }
            set {
                if ((this.useridField.Equals(value) != true)) {
                    this.useridField = value;
                    this.RaisePropertyChanged("userid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsermasterBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class UsermasterBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string createdonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int cuseridField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string deviceidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string empcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int groupidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string isactiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string isadminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sysdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tokenIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int useridField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string createdon {
            get {
                return this.createdonField;
            }
            set {
                if ((object.ReferenceEquals(this.createdonField, value) != true)) {
                    this.createdonField = value;
                    this.RaisePropertyChanged("createdon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cuserid {
            get {
                return this.cuseridField;
            }
            set {
                if ((this.cuseridField.Equals(value) != true)) {
                    this.cuseridField = value;
                    this.RaisePropertyChanged("cuserid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string deviceid {
            get {
                return this.deviceidField;
            }
            set {
                if ((object.ReferenceEquals(this.deviceidField, value) != true)) {
                    this.deviceidField = value;
                    this.RaisePropertyChanged("deviceid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string empcode {
            get {
                return this.empcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.empcodeField, value) != true)) {
                    this.empcodeField = value;
                    this.RaisePropertyChanged("empcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int groupid {
            get {
                return this.groupidField;
            }
            set {
                if ((this.groupidField.Equals(value) != true)) {
                    this.groupidField = value;
                    this.RaisePropertyChanged("groupid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ip {
            get {
                return this.ipField;
            }
            set {
                if ((object.ReferenceEquals(this.ipField, value) != true)) {
                    this.ipField = value;
                    this.RaisePropertyChanged("ip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string isactive {
            get {
                return this.isactiveField;
            }
            set {
                if ((object.ReferenceEquals(this.isactiveField, value) != true)) {
                    this.isactiveField = value;
                    this.RaisePropertyChanged("isactive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string isadmin {
            get {
                return this.isadminField;
            }
            set {
                if ((object.ReferenceEquals(this.isadminField, value) != true)) {
                    this.isadminField = value;
                    this.RaisePropertyChanged("isadmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sysdate {
            get {
                return this.sysdateField;
            }
            set {
                if ((object.ReferenceEquals(this.sysdateField, value) != true)) {
                    this.sysdateField = value;
                    this.RaisePropertyChanged("sysdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tokenId {
            get {
                return this.tokenIdField;
            }
            set {
                if ((object.ReferenceEquals(this.tokenIdField, value) != true)) {
                    this.tokenIdField = value;
                    this.RaisePropertyChanged("tokenId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userid {
            get {
                return this.useridField;
            }
            set {
                if ((this.useridField.Equals(value) != true)) {
                    this.useridField = value;
                    this.RaisePropertyChanged("userid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConstitutionBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class ConstitutionBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConstitutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Constitution {
            get {
                return this.ConstitutionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConstitutionField, value) != true)) {
                    this.ConstitutionField = value;
                    this.RaisePropertyChanged("Constitution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetProfitDetailsBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class GetProfitDetailsBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AdministrativeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ChangesInInventoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DepriciationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DirectManPowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EBIDTAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FinanceCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OtherDirectManufacturingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OtherIncomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PATField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PBTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PowerAndFuelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RowMaterialConsumedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SalesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingAndDistributionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal StoresAndConsumablesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalExpenditureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalIncomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Administrative {
            get {
                return this.AdministrativeField;
            }
            set {
                if ((this.AdministrativeField.Equals(value) != true)) {
                    this.AdministrativeField = value;
                    this.RaisePropertyChanged("Administrative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ChangesInInventories {
            get {
                return this.ChangesInInventoriesField;
            }
            set {
                if ((this.ChangesInInventoriesField.Equals(value) != true)) {
                    this.ChangesInInventoriesField = value;
                    this.RaisePropertyChanged("ChangesInInventories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompId {
            get {
                return this.CompIdField;
            }
            set {
                if ((this.CompIdField.Equals(value) != true)) {
                    this.CompIdField = value;
                    this.RaisePropertyChanged("CompId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Depriciation {
            get {
                return this.DepriciationField;
            }
            set {
                if ((this.DepriciationField.Equals(value) != true)) {
                    this.DepriciationField = value;
                    this.RaisePropertyChanged("Depriciation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DirectManPower {
            get {
                return this.DirectManPowerField;
            }
            set {
                if ((this.DirectManPowerField.Equals(value) != true)) {
                    this.DirectManPowerField = value;
                    this.RaisePropertyChanged("DirectManPower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EBIDTA {
            get {
                return this.EBIDTAField;
            }
            set {
                if ((this.EBIDTAField.Equals(value) != true)) {
                    this.EBIDTAField = value;
                    this.RaisePropertyChanged("EBIDTA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FinanceCost {
            get {
                return this.FinanceCostField;
            }
            set {
                if ((this.FinanceCostField.Equals(value) != true)) {
                    this.FinanceCostField = value;
                    this.RaisePropertyChanged("FinanceCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OtherDirectManufacturing {
            get {
                return this.OtherDirectManufacturingField;
            }
            set {
                if ((this.OtherDirectManufacturingField.Equals(value) != true)) {
                    this.OtherDirectManufacturingField = value;
                    this.RaisePropertyChanged("OtherDirectManufacturing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OtherIncome {
            get {
                return this.OtherIncomeField;
            }
            set {
                if ((this.OtherIncomeField.Equals(value) != true)) {
                    this.OtherIncomeField = value;
                    this.RaisePropertyChanged("OtherIncome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PAT {
            get {
                return this.PATField;
            }
            set {
                if ((this.PATField.Equals(value) != true)) {
                    this.PATField = value;
                    this.RaisePropertyChanged("PAT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PBT {
            get {
                return this.PBTField;
            }
            set {
                if ((this.PBTField.Equals(value) != true)) {
                    this.PBTField = value;
                    this.RaisePropertyChanged("PBT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PowerAndFuel {
            get {
                return this.PowerAndFuelField;
            }
            set {
                if ((this.PowerAndFuelField.Equals(value) != true)) {
                    this.PowerAndFuelField = value;
                    this.RaisePropertyChanged("PowerAndFuel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RowMaterialConsumed {
            get {
                return this.RowMaterialConsumedField;
            }
            set {
                if ((this.RowMaterialConsumedField.Equals(value) != true)) {
                    this.RowMaterialConsumedField = value;
                    this.RaisePropertyChanged("RowMaterialConsumed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Sales {
            get {
                return this.SalesField;
            }
            set {
                if ((this.SalesField.Equals(value) != true)) {
                    this.SalesField = value;
                    this.RaisePropertyChanged("Sales");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingAndDistribution {
            get {
                return this.SellingAndDistributionField;
            }
            set {
                if ((this.SellingAndDistributionField.Equals(value) != true)) {
                    this.SellingAndDistributionField = value;
                    this.RaisePropertyChanged("SellingAndDistribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal StoresAndConsumables {
            get {
                return this.StoresAndConsumablesField;
            }
            set {
                if ((this.StoresAndConsumablesField.Equals(value) != true)) {
                    this.StoresAndConsumablesField = value;
                    this.RaisePropertyChanged("StoresAndConsumables");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((this.TaxField.Equals(value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalExpenditure {
            get {
                return this.TotalExpenditureField;
            }
            set {
                if ((this.TotalExpenditureField.Equals(value) != true)) {
                    this.TotalExpenditureField = value;
                    this.RaisePropertyChanged("TotalExpenditure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalIncome {
            get {
                return this.TotalIncomeField;
            }
            set {
                if ((this.TotalIncomeField.Equals(value) != true)) {
                    this.TotalIncomeField = value;
                    this.RaisePropertyChanged("TotalIncome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetEquitiesLiabilitiesBO", Namespace="http://schemas.datacontract.org/2004/07/BussinessLogicLayer")]
    [System.SerializableAttribute()]
    public partial class GetEquitiesLiabilitiesBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FinishedGoodsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LessdaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LongBorrowingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LongLiabilitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MoredaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OthercurrentAssetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RawMaterialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReserveSurplusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ShareCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ShortTermloansField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalAssetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalDebtorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalInventoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalNetWorthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal bankfinanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal capitalworkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal checkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal currentAssetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal netfiextangibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal netfixedintangibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal othercurrentliabilitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal othernoncurrentAssetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal statutoryduesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal storesConsumablesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal totalcurrentliabilitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal totalequitiesliabilitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal totalliabilitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal tradepayablesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompId {
            get {
                return this.CompIdField;
            }
            set {
                if ((this.CompIdField.Equals(value) != true)) {
                    this.CompIdField = value;
                    this.RaisePropertyChanged("CompId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FinishedGoods {
            get {
                return this.FinishedGoodsField;
            }
            set {
                if ((this.FinishedGoodsField.Equals(value) != true)) {
                    this.FinishedGoodsField = value;
                    this.RaisePropertyChanged("FinishedGoods");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Lessdays {
            get {
                return this.LessdaysField;
            }
            set {
                if ((this.LessdaysField.Equals(value) != true)) {
                    this.LessdaysField = value;
                    this.RaisePropertyChanged("Lessdays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LongBorrowings {
            get {
                return this.LongBorrowingsField;
            }
            set {
                if ((this.LongBorrowingsField.Equals(value) != true)) {
                    this.LongBorrowingsField = value;
                    this.RaisePropertyChanged("LongBorrowings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LongLiabilities {
            get {
                return this.LongLiabilitiesField;
            }
            set {
                if ((this.LongLiabilitiesField.Equals(value) != true)) {
                    this.LongLiabilitiesField = value;
                    this.RaisePropertyChanged("LongLiabilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Moredays {
            get {
                return this.MoredaysField;
            }
            set {
                if ((this.MoredaysField.Equals(value) != true)) {
                    this.MoredaysField = value;
                    this.RaisePropertyChanged("Moredays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OthercurrentAssets {
            get {
                return this.OthercurrentAssetsField;
            }
            set {
                if ((this.OthercurrentAssetsField.Equals(value) != true)) {
                    this.OthercurrentAssetsField = value;
                    this.RaisePropertyChanged("OthercurrentAssets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RawMaterials {
            get {
                return this.RawMaterialsField;
            }
            set {
                if ((this.RawMaterialsField.Equals(value) != true)) {
                    this.RawMaterialsField = value;
                    this.RaisePropertyChanged("RawMaterials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReserveSurplus {
            get {
                return this.ReserveSurplusField;
            }
            set {
                if ((this.ReserveSurplusField.Equals(value) != true)) {
                    this.ReserveSurplusField = value;
                    this.RaisePropertyChanged("ReserveSurplus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ShareCapital {
            get {
                return this.ShareCapitalField;
            }
            set {
                if ((this.ShareCapitalField.Equals(value) != true)) {
                    this.ShareCapitalField = value;
                    this.RaisePropertyChanged("ShareCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ShortTermloans {
            get {
                return this.ShortTermloansField;
            }
            set {
                if ((this.ShortTermloansField.Equals(value) != true)) {
                    this.ShortTermloansField = value;
                    this.RaisePropertyChanged("ShortTermloans");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalAssets {
            get {
                return this.TotalAssetsField;
            }
            set {
                if ((this.TotalAssetsField.Equals(value) != true)) {
                    this.TotalAssetsField = value;
                    this.RaisePropertyChanged("TotalAssets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalDebtors {
            get {
                return this.TotalDebtorsField;
            }
            set {
                if ((this.TotalDebtorsField.Equals(value) != true)) {
                    this.TotalDebtorsField = value;
                    this.RaisePropertyChanged("TotalDebtors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalInventories {
            get {
                return this.TotalInventoriesField;
            }
            set {
                if ((this.TotalInventoriesField.Equals(value) != true)) {
                    this.TotalInventoriesField = value;
                    this.RaisePropertyChanged("TotalInventories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalNetWorth {
            get {
                return this.TotalNetWorthField;
            }
            set {
                if ((this.TotalNetWorthField.Equals(value) != true)) {
                    this.TotalNetWorthField = value;
                    this.RaisePropertyChanged("TotalNetWorth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal WIP {
            get {
                return this.WIPField;
            }
            set {
                if ((this.WIPField.Equals(value) != true)) {
                    this.WIPField = value;
                    this.RaisePropertyChanged("WIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal bankfinance {
            get {
                return this.bankfinanceField;
            }
            set {
                if ((this.bankfinanceField.Equals(value) != true)) {
                    this.bankfinanceField = value;
                    this.RaisePropertyChanged("bankfinance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal capitalwork {
            get {
                return this.capitalworkField;
            }
            set {
                if ((this.capitalworkField.Equals(value) != true)) {
                    this.capitalworkField = value;
                    this.RaisePropertyChanged("capitalwork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal check {
            get {
                return this.checkField;
            }
            set {
                if ((this.checkField.Equals(value) != true)) {
                    this.checkField = value;
                    this.RaisePropertyChanged("check");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal currentAssets {
            get {
                return this.currentAssetsField;
            }
            set {
                if ((this.currentAssetsField.Equals(value) != true)) {
                    this.currentAssetsField = value;
                    this.RaisePropertyChanged("currentAssets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal netfiextangible {
            get {
                return this.netfiextangibleField;
            }
            set {
                if ((this.netfiextangibleField.Equals(value) != true)) {
                    this.netfiextangibleField = value;
                    this.RaisePropertyChanged("netfiextangible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal netfixedintangible {
            get {
                return this.netfixedintangibleField;
            }
            set {
                if ((this.netfixedintangibleField.Equals(value) != true)) {
                    this.netfixedintangibleField = value;
                    this.RaisePropertyChanged("netfixedintangible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal othercurrentliabilities {
            get {
                return this.othercurrentliabilitiesField;
            }
            set {
                if ((this.othercurrentliabilitiesField.Equals(value) != true)) {
                    this.othercurrentliabilitiesField = value;
                    this.RaisePropertyChanged("othercurrentliabilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal othernoncurrentAssets {
            get {
                return this.othernoncurrentAssetsField;
            }
            set {
                if ((this.othernoncurrentAssetsField.Equals(value) != true)) {
                    this.othernoncurrentAssetsField = value;
                    this.RaisePropertyChanged("othernoncurrentAssets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal statutorydues {
            get {
                return this.statutoryduesField;
            }
            set {
                if ((this.statutoryduesField.Equals(value) != true)) {
                    this.statutoryduesField = value;
                    this.RaisePropertyChanged("statutorydues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal storesConsumables {
            get {
                return this.storesConsumablesField;
            }
            set {
                if ((this.storesConsumablesField.Equals(value) != true)) {
                    this.storesConsumablesField = value;
                    this.RaisePropertyChanged("storesConsumables");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal totalcurrentliabilities {
            get {
                return this.totalcurrentliabilitiesField;
            }
            set {
                if ((this.totalcurrentliabilitiesField.Equals(value) != true)) {
                    this.totalcurrentliabilitiesField = value;
                    this.RaisePropertyChanged("totalcurrentliabilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal totalequitiesliabilities {
            get {
                return this.totalequitiesliabilitiesField;
            }
            set {
                if ((this.totalequitiesliabilitiesField.Equals(value) != true)) {
                    this.totalequitiesliabilitiesField = value;
                    this.RaisePropertyChanged("totalequitiesliabilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal totalliabilities {
            get {
                return this.totalliabilitiesField;
            }
            set {
                if ((this.totalliabilitiesField.Equals(value) != true)) {
                    this.totalliabilitiesField = value;
                    this.RaisePropertyChanged("totalliabilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal tradepayables {
            get {
                return this.tradepayablesField;
            }
            set {
                if ((this.tradepayablesField.Equals(value) != true)) {
                    this.tradepayablesField = value;
                    this.RaisePropertyChanged("tradepayables");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICustomerRegistration")]
    public interface ICustomerRegistration {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/CompanyInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/CompanyInsertResponse")]
        SMEWebsite.ServiceReference1.GetCompanyDetailsBO[] CompanyInsert(SMEWebsite.ServiceReference1.CompanyDetailsBO ObjCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/CompanyInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/CompanyInsertResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetCompanyDetailsBO[]> CompanyInsertAsync(SMEWebsite.ServiceReference1.CompanyDetailsBO ObjCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/CustomerInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/CustomerInsertResponse")]
        SMEWebsite.ServiceReference1.GetCustomerDetailsBO[] CustomerInsert(SMEWebsite.ServiceReference1.CustomerDetailsBO objCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/CustomerInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/CustomerInsertResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetCustomerDetailsBO[]> CustomerInsertAsync(SMEWebsite.ServiceReference1.CustomerDetailsBO objCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/MachineDetailsInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/MachineDetailsInsertResponse")]
        SMEWebsite.ServiceReference1.GetMachineDetailsBO[] MachineDetailsInsert(SMEWebsite.ServiceReference1.MachineDetailsBO ObjMachine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/MachineDetailsInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/MachineDetailsInsertResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetMachineDetailsBO[]> MachineDetailsInsertAsync(SMEWebsite.ServiceReference1.MachineDetailsBO ObjMachine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/BankDetailsInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/BankDetailsInsertResponse")]
        int BankDetailsInsert(SMEWebsite.ServiceReference1.BankDetailsBO ObjBank);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/BankDetailsInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/BankDetailsInsertResponse")]
        System.Threading.Tasks.Task<int> BankDetailsInsertAsync(SMEWebsite.ServiceReference1.BankDetailsBO ObjBank);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/FacilitiesTypesInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/FacilitiesTypesInsertResponse")]
        SMEWebsite.ServiceReference1.GetFacilitiesTypesBO[] FacilitiesTypesInsert(SMEWebsite.ServiceReference1.FacilitiesTypesBO ObjFacilities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/FacilitiesTypesInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/FacilitiesTypesInsertResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetFacilitiesTypesBO[]> FacilitiesTypesInsertAsync(SMEWebsite.ServiceReference1.FacilitiesTypesBO ObjFacilities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/ProposeTypesInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/ProposeTypesInsertResponse")]
        SMEWebsite.ServiceReference1.GetFacilitiesTypesBO[] ProposeTypesInsert(SMEWebsite.ServiceReference1.FacilitiesTypesBO ObjFacilities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/ProposeTypesInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/ProposeTypesInsertResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetFacilitiesTypesBO[]> ProposeTypesInsertAsync(SMEWebsite.ServiceReference1.FacilitiesTypesBO ObjFacilities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/AssociateInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/AssociateInsertResponse")]
        SMEWebsite.ServiceReference1.GetAssociateBO[] AssociateInsert(SMEWebsite.ServiceReference1.AssociateBO ObjAssociate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/AssociateInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/AssociateInsertResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetAssociateBO[]> AssociateInsertAsync(SMEWebsite.ServiceReference1.AssociateBO ObjAssociate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/CollateralsSummaryInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/CollateralsSummaryInsertResponse")]
        SMEWebsite.ServiceReference1.GetCollateralsSummaryBO[] CollateralsSummaryInsert(SMEWebsite.ServiceReference1.CollateralsSummaryBO ObjCollaterals);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/CollateralsSummaryInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/CollateralsSummaryInsertResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetCollateralsSummaryBO[]> CollateralsSummaryInsertAsync(SMEWebsite.ServiceReference1.CollateralsSummaryBO ObjCollaterals);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/PerformanceEstimatesInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/PerformanceEstimatesInsertResponse")]
        SMEWebsite.ServiceReference1.GetPerformanceEstimatesBO[] PerformanceEstimatesInsert(SMEWebsite.ServiceReference1.PerformanceEstimateBO ObjPerformance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/PerformanceEstimatesInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/PerformanceEstimatesInsertResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetPerformanceEstimatesBO[]> PerformanceEstimatesInsertAsync(SMEWebsite.ServiceReference1.PerformanceEstimateBO ObjPerformance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/DocumentDetailsInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/DocumentDetailsInsertResponse")]
        int DocumentDetailsInsert(SMEWebsite.ServiceReference1.DocumentDetailsBO ObjDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/DocumentDetailsInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/DocumentDetailsInsertResponse")]
        System.Threading.Tasks.Task<int> DocumentDetailsInsertAsync(SMEWebsite.ServiceReference1.DocumentDetailsBO ObjDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/ScoreInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/ScoreInsertResponse")]
        SMEWebsite.ServiceReference1.GetScoreBO[] ScoreInsert(SMEWebsite.ServiceReference1.ScoreBO ObjScore);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/ScoreInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/ScoreInsertResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetScoreBO[]> ScoreInsertAsync(SMEWebsite.ServiceReference1.ScoreBO ObjScore);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetDocumentDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/GetDocumentDetailsResponse")]
        SMEWebsite.ServiceReference1.DocumentDetailsBO[] GetDocumentDetails(SMEWebsite.ServiceReference1.DocumentDetailsBO ObjDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetDocumentDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/GetDocumentDetailsResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.DocumentDetailsBO[]> GetDocumentDetailsAsync(SMEWebsite.ServiceReference1.DocumentDetailsBO ObjDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetCompanyDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/GetCompanyDetailsResponse")]
        string GetCompanyDetails(string Type, int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetCompanyDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/GetCompanyDetailsResponse")]
        System.Threading.Tasks.Task<string> GetCompanyDetailsAsync(string Type, int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetCityDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/GetCityDetailsResponse")]
        SMEWebsite.ServiceReference1.CityDetailsBO[] GetCityDetails(int StateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetCityDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/GetCityDetailsResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.CityDetailsBO[]> GetCityDetailsAsync(int StateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetStateDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/GetStateDetailsResponse")]
        SMEWebsite.ServiceReference1.StateDetailsBO[] GetStateDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetStateDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/GetStateDetailsResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.StateDetailsBO[]> GetStateDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/Test", ReplyAction="http://tempuri.org/ICustomerRegistration/TestResponse")]
        string Test(SMEWebsite.ServiceReference1.CityDetailsBO ObjCity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/Test", ReplyAction="http://tempuri.org/ICustomerRegistration/TestResponse")]
        System.Threading.Tasks.Task<string> TestAsync(SMEWebsite.ServiceReference1.CityDetailsBO ObjCity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/Login", ReplyAction="http://tempuri.org/ICustomerRegistration/LoginResponse")]
        int Login(SMEWebsite.ServiceReference1.LoginBO ObjLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/Login", ReplyAction="http://tempuri.org/ICustomerRegistration/LoginResponse")]
        System.Threading.Tasks.Task<int> LoginAsync(SMEWebsite.ServiceReference1.LoginBO ObjLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetAllCompany", ReplyAction="http://tempuri.org/ICustomerRegistration/GetAllCompanyResponse")]
        SMEWebsite.ServiceReference1.CommonBO[] GetAllCompany();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetAllCompany", ReplyAction="http://tempuri.org/ICustomerRegistration/GetAllCompanyResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.CommonBO[]> GetAllCompanyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetCustomerDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/GetCustomerDetailsResponse")]
        SMEWebsite.ServiceReference1.CommonBO[] GetCustomerDetails(string CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetCustomerDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/GetCustomerDetailsResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.CommonBO[]> GetCustomerDetailsAsync(string CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetAllCompanyInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/GetAllCompanyInsertResponse")]
        SMEWebsite.ServiceReference1.GetCompanyDetailsBO[] GetAllCompanyInsert();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetAllCompanyInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/GetAllCompanyInsertResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetCompanyDetailsBO[]> GetAllCompanyInsertAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/SearchCompanyDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/SearchCompanyDetailsResponse")]
        SMEWebsite.ServiceReference1.GetCompanyDetailsBO[] SearchCompanyDetails(SMEWebsite.ServiceReference1.SearchCompanyBO ObjSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/SearchCompanyDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/SearchCompanyDetailsResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetCompanyDetailsBO[]> SearchCompanyDetailsAsync(SMEWebsite.ServiceReference1.SearchCompanyBO ObjSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/UserRegistration", ReplyAction="http://tempuri.org/ICustomerRegistration/UserRegistrationResponse")]
        SMEWebsite.ServiceReference1.GetUserRegistrationBO[] UserRegistration(SMEWebsite.ServiceReference1.UserRegistrationBO ObjRegistration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/UserRegistration", ReplyAction="http://tempuri.org/ICustomerRegistration/UserRegistrationResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetUserRegistrationBO[]> UserRegistrationAsync(SMEWebsite.ServiceReference1.UserRegistrationBO ObjRegistration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetAllUser", ReplyAction="http://tempuri.org/ICustomerRegistration/GetAllUserResponse")]
        SMEWebsite.ServiceReference1.GetUserRegistrationBO[] GetAllUser(SMEWebsite.ServiceReference1.UserRegistrationBO ObjRegistration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetAllUser", ReplyAction="http://tempuri.org/ICustomerRegistration/GetAllUserResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetUserRegistrationBO[]> GetAllUserAsync(SMEWebsite.ServiceReference1.UserRegistrationBO ObjRegistration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/StatutoryInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/StatutoryInsertResponse")]
        SMEWebsite.ServiceReference1.GetStatutoryBO[] StatutoryInsert(SMEWebsite.ServiceReference1.StatutoryBO ObjStatutory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/StatutoryInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/StatutoryInsertResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetStatutoryBO[]> StatutoryInsertAsync(SMEWebsite.ServiceReference1.StatutoryBO ObjStatutory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetSMEMapping", ReplyAction="http://tempuri.org/ICustomerRegistration/GetSMEMappingResponse")]
        SMEWebsite.ServiceReference1.MenuMappingBO[] GetSMEMapping(SMEWebsite.ServiceReference1.MenuMappingBO obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetSMEMapping", ReplyAction="http://tempuri.org/ICustomerRegistration/GetSMEMappingResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.MenuMappingBO[]> GetSMEMappingAsync(SMEWebsite.ServiceReference1.MenuMappingBO obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/SmeMenuMasterInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/SmeMenuMasterInsertResponse")]
        SMEWebsite.ServiceReference1.MenuMasterBo[] SmeMenuMasterInsert(SMEWebsite.ServiceReference1.MenuMasterBo ObjSmeMenuMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/SmeMenuMasterInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/SmeMenuMasterInsertResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.MenuMasterBo[]> SmeMenuMasterInsertAsync(SMEWebsite.ServiceReference1.MenuMasterBo ObjSmeMenuMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetDocumentsList", ReplyAction="http://tempuri.org/ICustomerRegistration/GetDocumentsListResponse")]
        string GetDocumentsList(int parent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetDocumentsList", ReplyAction="http://tempuri.org/ICustomerRegistration/GetDocumentsListResponse")]
        System.Threading.Tasks.Task<string> GetDocumentsListAsync(int parent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetMenuList", ReplyAction="http://tempuri.org/ICustomerRegistration/GetMenuListResponse")]
        System.Data.DataSet GetMenuList(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetMenuList", ReplyAction="http://tempuri.org/ICustomerRegistration/GetMenuListResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMenuListAsync(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/Checkfileexist", ReplyAction="http://tempuri.org/ICustomerRegistration/CheckfileexistResponse")]
        string Checkfileexist(SMEWebsite.ServiceReference1.DocumentDetailsBO objDoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/Checkfileexist", ReplyAction="http://tempuri.org/ICustomerRegistration/CheckfileexistResponse")]
        System.Threading.Tasks.Task<string> CheckfileexistAsync(SMEWebsite.ServiceReference1.DocumentDetailsBO objDoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetPromotorsDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/GetPromotorsDetailsResponse")]
        SMEWebsite.ServiceReference1.GetCustomerDetailsBO[] GetPromotorsDetails(SMEWebsite.ServiceReference1.CustomerDetailsBO objCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetPromotorsDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/GetPromotorsDetailsResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetCustomerDetailsBO[]> GetPromotorsDetailsAsync(SMEWebsite.ServiceReference1.CustomerDetailsBO objCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetFacilitiesTypes", ReplyAction="http://tempuri.org/ICustomerRegistration/GetFacilitiesTypesResponse")]
        SMEWebsite.ServiceReference1.GetFacilitiesTypesBO[] GetFacilitiesTypes(SMEWebsite.ServiceReference1.FacilitiesTypesBO ObjFacilities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetFacilitiesTypes", ReplyAction="http://tempuri.org/ICustomerRegistration/GetFacilitiesTypesResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetFacilitiesTypesBO[]> GetFacilitiesTypesAsync(SMEWebsite.ServiceReference1.FacilitiesTypesBO ObjFacilities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetProposeTypes", ReplyAction="http://tempuri.org/ICustomerRegistration/GetProposeTypesResponse")]
        SMEWebsite.ServiceReference1.GetFacilitiesTypesBO[] GetProposeTypes(SMEWebsite.ServiceReference1.FacilitiesTypesBO ObjFacilities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetProposeTypes", ReplyAction="http://tempuri.org/ICustomerRegistration/GetProposeTypesResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetFacilitiesTypesBO[]> GetProposeTypesAsync(SMEWebsite.ServiceReference1.FacilitiesTypesBO ObjFacilities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetMachineDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/GetMachineDetailsResponse")]
        SMEWebsite.ServiceReference1.GetMachineDetailsBO[] GetMachineDetails(SMEWebsite.ServiceReference1.MachineDetailsBO ObjMachine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetMachineDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/GetMachineDetailsResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetMachineDetailsBO[]> GetMachineDetailsAsync(SMEWebsite.ServiceReference1.MachineDetailsBO ObjMachine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetAssociate", ReplyAction="http://tempuri.org/ICustomerRegistration/GetAssociateResponse")]
        SMEWebsite.ServiceReference1.GetAssociateBO[] GetAssociate(SMEWebsite.ServiceReference1.AssociateBO ObjAssociate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetAssociate", ReplyAction="http://tempuri.org/ICustomerRegistration/GetAssociateResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetAssociateBO[]> GetAssociateAsync(SMEWebsite.ServiceReference1.AssociateBO ObjAssociate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetCollateralsSummary", ReplyAction="http://tempuri.org/ICustomerRegistration/GetCollateralsSummaryResponse")]
        SMEWebsite.ServiceReference1.GetCollateralsSummaryBO[] GetCollateralsSummary(SMEWebsite.ServiceReference1.CollateralsSummaryBO ObjCollaterals);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetCollateralsSummary", ReplyAction="http://tempuri.org/ICustomerRegistration/GetCollateralsSummaryResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetCollateralsSummaryBO[]> GetCollateralsSummaryAsync(SMEWebsite.ServiceReference1.CollateralsSummaryBO ObjCollaterals);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetPerformanceEstimates", ReplyAction="http://tempuri.org/ICustomerRegistration/GetPerformanceEstimatesResponse")]
        SMEWebsite.ServiceReference1.GetPerformanceEstimatesBO[] GetPerformanceEstimates(SMEWebsite.ServiceReference1.PerformanceEstimateBO ObjPerformance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetPerformanceEstimates", ReplyAction="http://tempuri.org/ICustomerRegistration/GetPerformanceEstimatesResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetPerformanceEstimatesBO[]> GetPerformanceEstimatesAsync(SMEWebsite.ServiceReference1.PerformanceEstimateBO ObjPerformance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetScore", ReplyAction="http://tempuri.org/ICustomerRegistration/GetScoreResponse")]
        SMEWebsite.ServiceReference1.GetScoreBO[] GetScore(SMEWebsite.ServiceReference1.ScoreBO ObjScore);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetScore", ReplyAction="http://tempuri.org/ICustomerRegistration/GetScoreResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetScoreBO[]> GetScoreAsync(SMEWebsite.ServiceReference1.ScoreBO ObjScore);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetStatutoryDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/GetStatutoryDetailsResponse")]
        SMEWebsite.ServiceReference1.GetStatutoryBO[] GetStatutoryDetails(SMEWebsite.ServiceReference1.StatutoryBO ObjStatutory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetStatutoryDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/GetStatutoryDetailsResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetStatutoryBO[]> GetStatutoryDetailsAsync(SMEWebsite.ServiceReference1.StatutoryBO ObjStatutory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/UserMasterInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/UserMasterInsertResponse")]
        SMEWebsite.ServiceReference1.UsermasterBO[] UserMasterInsert(SMEWebsite.ServiceReference1.UsermasterBO obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/UserMasterInsert", ReplyAction="http://tempuri.org/ICustomerRegistration/UserMasterInsertResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.UsermasterBO[]> UserMasterInsertAsync(SMEWebsite.ServiceReference1.UsermasterBO obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetUserMaster", ReplyAction="http://tempuri.org/ICustomerRegistration/GetUserMasterResponse")]
        SMEWebsite.ServiceReference1.UsermasterBO[] GetUserMaster(SMEWebsite.ServiceReference1.UsermasterBO obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetUserMaster", ReplyAction="http://tempuri.org/ICustomerRegistration/GetUserMasterResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.UsermasterBO[]> GetUserMasterAsync(SMEWebsite.ServiceReference1.UsermasterBO obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetConstitution", ReplyAction="http://tempuri.org/ICustomerRegistration/GetConstitutionResponse")]
        SMEWebsite.ServiceReference1.ConstitutionBO[] GetConstitution();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/GetConstitution", ReplyAction="http://tempuri.org/ICustomerRegistration/GetConstitutionResponse")]
        System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.ConstitutionBO[]> GetConstitutionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/InsertCompanyIncome", ReplyAction="http://tempuri.org/ICustomerRegistration/InsertCompanyIncomeResponse")]
        System.Data.DataTable InsertCompanyIncome(System.Data.DataTable dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/InsertCompanyIncome", ReplyAction="http://tempuri.org/ICustomerRegistration/InsertCompanyIncomeResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> InsertCompanyIncomeAsync(System.Data.DataTable dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/InsertCompanyLiabilities", ReplyAction="http://tempuri.org/ICustomerRegistration/InsertCompanyLiabilitiesResponse")]
        System.Data.DataTable InsertCompanyLiabilities(System.Data.DataTable dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/InsertCompanyLiabilities", ReplyAction="http://tempuri.org/ICustomerRegistration/InsertCompanyLiabilitiesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> InsertCompanyLiabilitiesAsync(System.Data.DataTable dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/CompanyIncomeDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/CompanyIncomeDetailsResponse")]
        System.Data.DataTable CompanyIncomeDetails(SMEWebsite.ServiceReference1.GetProfitDetailsBO objprofitdtls);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/CompanyIncomeDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/CompanyIncomeDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> CompanyIncomeDetailsAsync(SMEWebsite.ServiceReference1.GetProfitDetailsBO objprofitdtls);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/CompanyEquitiesAndLiabilitiesDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/CompanyEquitiesAndLiabilitiesDetailsResp" +
            "onse")]
        System.Data.DataTable CompanyEquitiesAndLiabilitiesDetails(SMEWebsite.ServiceReference1.GetEquitiesLiabilitiesBO objequilib);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/CompanyEquitiesAndLiabilitiesDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/CompanyEquitiesAndLiabilitiesDetailsResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Data.DataTable> CompanyEquitiesAndLiabilitiesDetailsAsync(SMEWebsite.ServiceReference1.GetEquitiesLiabilitiesBO objequilib);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/LoanDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/LoanDetailsResponse")]
        System.Data.DataTable LoanDetails(System.Data.DataTable dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRegistration/LoanDetails", ReplyAction="http://tempuri.org/ICustomerRegistration/LoanDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> LoanDetailsAsync(System.Data.DataTable dt);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerRegistrationChannel : SMEWebsite.ServiceReference1.ICustomerRegistration, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerRegistrationClient : System.ServiceModel.ClientBase<SMEWebsite.ServiceReference1.ICustomerRegistration>, SMEWebsite.ServiceReference1.ICustomerRegistration {
        
        public CustomerRegistrationClient() {
        }
        
        public CustomerRegistrationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerRegistrationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerRegistrationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerRegistrationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SMEWebsite.ServiceReference1.GetCompanyDetailsBO[] CompanyInsert(SMEWebsite.ServiceReference1.CompanyDetailsBO ObjCompany) {
            return base.Channel.CompanyInsert(ObjCompany);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetCompanyDetailsBO[]> CompanyInsertAsync(SMEWebsite.ServiceReference1.CompanyDetailsBO ObjCompany) {
            return base.Channel.CompanyInsertAsync(ObjCompany);
        }
        
        public SMEWebsite.ServiceReference1.GetCustomerDetailsBO[] CustomerInsert(SMEWebsite.ServiceReference1.CustomerDetailsBO objCustomer) {
            return base.Channel.CustomerInsert(objCustomer);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetCustomerDetailsBO[]> CustomerInsertAsync(SMEWebsite.ServiceReference1.CustomerDetailsBO objCustomer) {
            return base.Channel.CustomerInsertAsync(objCustomer);
        }
        
        public SMEWebsite.ServiceReference1.GetMachineDetailsBO[] MachineDetailsInsert(SMEWebsite.ServiceReference1.MachineDetailsBO ObjMachine) {
            return base.Channel.MachineDetailsInsert(ObjMachine);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetMachineDetailsBO[]> MachineDetailsInsertAsync(SMEWebsite.ServiceReference1.MachineDetailsBO ObjMachine) {
            return base.Channel.MachineDetailsInsertAsync(ObjMachine);
        }
        
        public int BankDetailsInsert(SMEWebsite.ServiceReference1.BankDetailsBO ObjBank) {
            return base.Channel.BankDetailsInsert(ObjBank);
        }
        
        public System.Threading.Tasks.Task<int> BankDetailsInsertAsync(SMEWebsite.ServiceReference1.BankDetailsBO ObjBank) {
            return base.Channel.BankDetailsInsertAsync(ObjBank);
        }
        
        public SMEWebsite.ServiceReference1.GetFacilitiesTypesBO[] FacilitiesTypesInsert(SMEWebsite.ServiceReference1.FacilitiesTypesBO ObjFacilities) {
            return base.Channel.FacilitiesTypesInsert(ObjFacilities);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetFacilitiesTypesBO[]> FacilitiesTypesInsertAsync(SMEWebsite.ServiceReference1.FacilitiesTypesBO ObjFacilities) {
            return base.Channel.FacilitiesTypesInsertAsync(ObjFacilities);
        }
        
        public SMEWebsite.ServiceReference1.GetFacilitiesTypesBO[] ProposeTypesInsert(SMEWebsite.ServiceReference1.FacilitiesTypesBO ObjFacilities) {
            return base.Channel.ProposeTypesInsert(ObjFacilities);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetFacilitiesTypesBO[]> ProposeTypesInsertAsync(SMEWebsite.ServiceReference1.FacilitiesTypesBO ObjFacilities) {
            return base.Channel.ProposeTypesInsertAsync(ObjFacilities);
        }
        
        public SMEWebsite.ServiceReference1.GetAssociateBO[] AssociateInsert(SMEWebsite.ServiceReference1.AssociateBO ObjAssociate) {
            return base.Channel.AssociateInsert(ObjAssociate);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetAssociateBO[]> AssociateInsertAsync(SMEWebsite.ServiceReference1.AssociateBO ObjAssociate) {
            return base.Channel.AssociateInsertAsync(ObjAssociate);
        }
        
        public SMEWebsite.ServiceReference1.GetCollateralsSummaryBO[] CollateralsSummaryInsert(SMEWebsite.ServiceReference1.CollateralsSummaryBO ObjCollaterals) {
            return base.Channel.CollateralsSummaryInsert(ObjCollaterals);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetCollateralsSummaryBO[]> CollateralsSummaryInsertAsync(SMEWebsite.ServiceReference1.CollateralsSummaryBO ObjCollaterals) {
            return base.Channel.CollateralsSummaryInsertAsync(ObjCollaterals);
        }
        
        public SMEWebsite.ServiceReference1.GetPerformanceEstimatesBO[] PerformanceEstimatesInsert(SMEWebsite.ServiceReference1.PerformanceEstimateBO ObjPerformance) {
            return base.Channel.PerformanceEstimatesInsert(ObjPerformance);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetPerformanceEstimatesBO[]> PerformanceEstimatesInsertAsync(SMEWebsite.ServiceReference1.PerformanceEstimateBO ObjPerformance) {
            return base.Channel.PerformanceEstimatesInsertAsync(ObjPerformance);
        }
        
        public int DocumentDetailsInsert(SMEWebsite.ServiceReference1.DocumentDetailsBO ObjDocument) {
            return base.Channel.DocumentDetailsInsert(ObjDocument);
        }
        
        public System.Threading.Tasks.Task<int> DocumentDetailsInsertAsync(SMEWebsite.ServiceReference1.DocumentDetailsBO ObjDocument) {
            return base.Channel.DocumentDetailsInsertAsync(ObjDocument);
        }
        
        public SMEWebsite.ServiceReference1.GetScoreBO[] ScoreInsert(SMEWebsite.ServiceReference1.ScoreBO ObjScore) {
            return base.Channel.ScoreInsert(ObjScore);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetScoreBO[]> ScoreInsertAsync(SMEWebsite.ServiceReference1.ScoreBO ObjScore) {
            return base.Channel.ScoreInsertAsync(ObjScore);
        }
        
        public SMEWebsite.ServiceReference1.DocumentDetailsBO[] GetDocumentDetails(SMEWebsite.ServiceReference1.DocumentDetailsBO ObjDocument) {
            return base.Channel.GetDocumentDetails(ObjDocument);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.DocumentDetailsBO[]> GetDocumentDetailsAsync(SMEWebsite.ServiceReference1.DocumentDetailsBO ObjDocument) {
            return base.Channel.GetDocumentDetailsAsync(ObjDocument);
        }
        
        public string GetCompanyDetails(string Type, int CompanyId) {
            return base.Channel.GetCompanyDetails(Type, CompanyId);
        }
        
        public System.Threading.Tasks.Task<string> GetCompanyDetailsAsync(string Type, int CompanyId) {
            return base.Channel.GetCompanyDetailsAsync(Type, CompanyId);
        }
        
        public SMEWebsite.ServiceReference1.CityDetailsBO[] GetCityDetails(int StateID) {
            return base.Channel.GetCityDetails(StateID);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.CityDetailsBO[]> GetCityDetailsAsync(int StateID) {
            return base.Channel.GetCityDetailsAsync(StateID);
        }
        
        public SMEWebsite.ServiceReference1.StateDetailsBO[] GetStateDetails() {
            return base.Channel.GetStateDetails();
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.StateDetailsBO[]> GetStateDetailsAsync() {
            return base.Channel.GetStateDetailsAsync();
        }
        
        public string Test(SMEWebsite.ServiceReference1.CityDetailsBO ObjCity) {
            return base.Channel.Test(ObjCity);
        }
        
        public System.Threading.Tasks.Task<string> TestAsync(SMEWebsite.ServiceReference1.CityDetailsBO ObjCity) {
            return base.Channel.TestAsync(ObjCity);
        }
        
        public int Login(SMEWebsite.ServiceReference1.LoginBO ObjLogin) {
            return base.Channel.Login(ObjLogin);
        }
        
        public System.Threading.Tasks.Task<int> LoginAsync(SMEWebsite.ServiceReference1.LoginBO ObjLogin) {
            return base.Channel.LoginAsync(ObjLogin);
        }
        
        public SMEWebsite.ServiceReference1.CommonBO[] GetAllCompany() {
            return base.Channel.GetAllCompany();
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.CommonBO[]> GetAllCompanyAsync() {
            return base.Channel.GetAllCompanyAsync();
        }
        
        public SMEWebsite.ServiceReference1.CommonBO[] GetCustomerDetails(string CompanyId) {
            return base.Channel.GetCustomerDetails(CompanyId);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.CommonBO[]> GetCustomerDetailsAsync(string CompanyId) {
            return base.Channel.GetCustomerDetailsAsync(CompanyId);
        }
        
        public SMEWebsite.ServiceReference1.GetCompanyDetailsBO[] GetAllCompanyInsert() {
            return base.Channel.GetAllCompanyInsert();
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetCompanyDetailsBO[]> GetAllCompanyInsertAsync() {
            return base.Channel.GetAllCompanyInsertAsync();
        }
        
        public SMEWebsite.ServiceReference1.GetCompanyDetailsBO[] SearchCompanyDetails(SMEWebsite.ServiceReference1.SearchCompanyBO ObjSearch) {
            return base.Channel.SearchCompanyDetails(ObjSearch);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetCompanyDetailsBO[]> SearchCompanyDetailsAsync(SMEWebsite.ServiceReference1.SearchCompanyBO ObjSearch) {
            return base.Channel.SearchCompanyDetailsAsync(ObjSearch);
        }
        
        public SMEWebsite.ServiceReference1.GetUserRegistrationBO[] UserRegistration(SMEWebsite.ServiceReference1.UserRegistrationBO ObjRegistration) {
            return base.Channel.UserRegistration(ObjRegistration);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetUserRegistrationBO[]> UserRegistrationAsync(SMEWebsite.ServiceReference1.UserRegistrationBO ObjRegistration) {
            return base.Channel.UserRegistrationAsync(ObjRegistration);
        }
        
        public SMEWebsite.ServiceReference1.GetUserRegistrationBO[] GetAllUser(SMEWebsite.ServiceReference1.UserRegistrationBO ObjRegistration) {
            return base.Channel.GetAllUser(ObjRegistration);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetUserRegistrationBO[]> GetAllUserAsync(SMEWebsite.ServiceReference1.UserRegistrationBO ObjRegistration) {
            return base.Channel.GetAllUserAsync(ObjRegistration);
        }
        
        public SMEWebsite.ServiceReference1.GetStatutoryBO[] StatutoryInsert(SMEWebsite.ServiceReference1.StatutoryBO ObjStatutory) {
            return base.Channel.StatutoryInsert(ObjStatutory);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetStatutoryBO[]> StatutoryInsertAsync(SMEWebsite.ServiceReference1.StatutoryBO ObjStatutory) {
            return base.Channel.StatutoryInsertAsync(ObjStatutory);
        }
        
        public SMEWebsite.ServiceReference1.MenuMappingBO[] GetSMEMapping(SMEWebsite.ServiceReference1.MenuMappingBO obj) {
            return base.Channel.GetSMEMapping(obj);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.MenuMappingBO[]> GetSMEMappingAsync(SMEWebsite.ServiceReference1.MenuMappingBO obj) {
            return base.Channel.GetSMEMappingAsync(obj);
        }
        
        public SMEWebsite.ServiceReference1.MenuMasterBo[] SmeMenuMasterInsert(SMEWebsite.ServiceReference1.MenuMasterBo ObjSmeMenuMaster) {
            return base.Channel.SmeMenuMasterInsert(ObjSmeMenuMaster);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.MenuMasterBo[]> SmeMenuMasterInsertAsync(SMEWebsite.ServiceReference1.MenuMasterBo ObjSmeMenuMaster) {
            return base.Channel.SmeMenuMasterInsertAsync(ObjSmeMenuMaster);
        }
        
        public string GetDocumentsList(int parent) {
            return base.Channel.GetDocumentsList(parent);
        }
        
        public System.Threading.Tasks.Task<string> GetDocumentsListAsync(int parent) {
            return base.Channel.GetDocumentsListAsync(parent);
        }
        
        public System.Data.DataSet GetMenuList(int userid) {
            return base.Channel.GetMenuList(userid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMenuListAsync(int userid) {
            return base.Channel.GetMenuListAsync(userid);
        }
        
        public string Checkfileexist(SMEWebsite.ServiceReference1.DocumentDetailsBO objDoc) {
            return base.Channel.Checkfileexist(objDoc);
        }
        
        public System.Threading.Tasks.Task<string> CheckfileexistAsync(SMEWebsite.ServiceReference1.DocumentDetailsBO objDoc) {
            return base.Channel.CheckfileexistAsync(objDoc);
        }
        
        public SMEWebsite.ServiceReference1.GetCustomerDetailsBO[] GetPromotorsDetails(SMEWebsite.ServiceReference1.CustomerDetailsBO objCustomer) {
            return base.Channel.GetPromotorsDetails(objCustomer);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetCustomerDetailsBO[]> GetPromotorsDetailsAsync(SMEWebsite.ServiceReference1.CustomerDetailsBO objCustomer) {
            return base.Channel.GetPromotorsDetailsAsync(objCustomer);
        }
        
        public SMEWebsite.ServiceReference1.GetFacilitiesTypesBO[] GetFacilitiesTypes(SMEWebsite.ServiceReference1.FacilitiesTypesBO ObjFacilities) {
            return base.Channel.GetFacilitiesTypes(ObjFacilities);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetFacilitiesTypesBO[]> GetFacilitiesTypesAsync(SMEWebsite.ServiceReference1.FacilitiesTypesBO ObjFacilities) {
            return base.Channel.GetFacilitiesTypesAsync(ObjFacilities);
        }
        
        public SMEWebsite.ServiceReference1.GetFacilitiesTypesBO[] GetProposeTypes(SMEWebsite.ServiceReference1.FacilitiesTypesBO ObjFacilities) {
            return base.Channel.GetProposeTypes(ObjFacilities);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetFacilitiesTypesBO[]> GetProposeTypesAsync(SMEWebsite.ServiceReference1.FacilitiesTypesBO ObjFacilities) {
            return base.Channel.GetProposeTypesAsync(ObjFacilities);
        }
        
        public SMEWebsite.ServiceReference1.GetMachineDetailsBO[] GetMachineDetails(SMEWebsite.ServiceReference1.MachineDetailsBO ObjMachine) {
            return base.Channel.GetMachineDetails(ObjMachine);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetMachineDetailsBO[]> GetMachineDetailsAsync(SMEWebsite.ServiceReference1.MachineDetailsBO ObjMachine) {
            return base.Channel.GetMachineDetailsAsync(ObjMachine);
        }
        
        public SMEWebsite.ServiceReference1.GetAssociateBO[] GetAssociate(SMEWebsite.ServiceReference1.AssociateBO ObjAssociate) {
            return base.Channel.GetAssociate(ObjAssociate);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetAssociateBO[]> GetAssociateAsync(SMEWebsite.ServiceReference1.AssociateBO ObjAssociate) {
            return base.Channel.GetAssociateAsync(ObjAssociate);
        }
        
        public SMEWebsite.ServiceReference1.GetCollateralsSummaryBO[] GetCollateralsSummary(SMEWebsite.ServiceReference1.CollateralsSummaryBO ObjCollaterals) {
            return base.Channel.GetCollateralsSummary(ObjCollaterals);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetCollateralsSummaryBO[]> GetCollateralsSummaryAsync(SMEWebsite.ServiceReference1.CollateralsSummaryBO ObjCollaterals) {
            return base.Channel.GetCollateralsSummaryAsync(ObjCollaterals);
        }
        
        public SMEWebsite.ServiceReference1.GetPerformanceEstimatesBO[] GetPerformanceEstimates(SMEWebsite.ServiceReference1.PerformanceEstimateBO ObjPerformance) {
            return base.Channel.GetPerformanceEstimates(ObjPerformance);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetPerformanceEstimatesBO[]> GetPerformanceEstimatesAsync(SMEWebsite.ServiceReference1.PerformanceEstimateBO ObjPerformance) {
            return base.Channel.GetPerformanceEstimatesAsync(ObjPerformance);
        }
        
        public SMEWebsite.ServiceReference1.GetScoreBO[] GetScore(SMEWebsite.ServiceReference1.ScoreBO ObjScore) {
            return base.Channel.GetScore(ObjScore);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetScoreBO[]> GetScoreAsync(SMEWebsite.ServiceReference1.ScoreBO ObjScore) {
            return base.Channel.GetScoreAsync(ObjScore);
        }
        
        public SMEWebsite.ServiceReference1.GetStatutoryBO[] GetStatutoryDetails(SMEWebsite.ServiceReference1.StatutoryBO ObjStatutory) {
            return base.Channel.GetStatutoryDetails(ObjStatutory);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.GetStatutoryBO[]> GetStatutoryDetailsAsync(SMEWebsite.ServiceReference1.StatutoryBO ObjStatutory) {
            return base.Channel.GetStatutoryDetailsAsync(ObjStatutory);
        }
        
        public SMEWebsite.ServiceReference1.UsermasterBO[] UserMasterInsert(SMEWebsite.ServiceReference1.UsermasterBO obj) {
            return base.Channel.UserMasterInsert(obj);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.UsermasterBO[]> UserMasterInsertAsync(SMEWebsite.ServiceReference1.UsermasterBO obj) {
            return base.Channel.UserMasterInsertAsync(obj);
        }
        
        public SMEWebsite.ServiceReference1.UsermasterBO[] GetUserMaster(SMEWebsite.ServiceReference1.UsermasterBO obj) {
            return base.Channel.GetUserMaster(obj);
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.UsermasterBO[]> GetUserMasterAsync(SMEWebsite.ServiceReference1.UsermasterBO obj) {
            return base.Channel.GetUserMasterAsync(obj);
        }
        
        public SMEWebsite.ServiceReference1.ConstitutionBO[] GetConstitution() {
            return base.Channel.GetConstitution();
        }
        
        public System.Threading.Tasks.Task<SMEWebsite.ServiceReference1.ConstitutionBO[]> GetConstitutionAsync() {
            return base.Channel.GetConstitutionAsync();
        }
        
        public System.Data.DataTable InsertCompanyIncome(System.Data.DataTable dt) {
            return base.Channel.InsertCompanyIncome(dt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> InsertCompanyIncomeAsync(System.Data.DataTable dt) {
            return base.Channel.InsertCompanyIncomeAsync(dt);
        }
        
        public System.Data.DataTable InsertCompanyLiabilities(System.Data.DataTable dt) {
            return base.Channel.InsertCompanyLiabilities(dt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> InsertCompanyLiabilitiesAsync(System.Data.DataTable dt) {
            return base.Channel.InsertCompanyLiabilitiesAsync(dt);
        }
        
        public System.Data.DataTable CompanyIncomeDetails(SMEWebsite.ServiceReference1.GetProfitDetailsBO objprofitdtls) {
            return base.Channel.CompanyIncomeDetails(objprofitdtls);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> CompanyIncomeDetailsAsync(SMEWebsite.ServiceReference1.GetProfitDetailsBO objprofitdtls) {
            return base.Channel.CompanyIncomeDetailsAsync(objprofitdtls);
        }
        
        public System.Data.DataTable CompanyEquitiesAndLiabilitiesDetails(SMEWebsite.ServiceReference1.GetEquitiesLiabilitiesBO objequilib) {
            return base.Channel.CompanyEquitiesAndLiabilitiesDetails(objequilib);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> CompanyEquitiesAndLiabilitiesDetailsAsync(SMEWebsite.ServiceReference1.GetEquitiesLiabilitiesBO objequilib) {
            return base.Channel.CompanyEquitiesAndLiabilitiesDetailsAsync(objequilib);
        }
        
        public System.Data.DataTable LoanDetails(System.Data.DataTable dt) {
            return base.Channel.LoanDetails(dt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> LoanDetailsAsync(System.Data.DataTable dt) {
            return base.Channel.LoanDetailsAsync(dt);
        }
    }
}
